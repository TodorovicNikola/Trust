<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:properties="http://www.eclipse.org/sirius/properties/1.0.0" xmlns:properties-ext-widgets-reference="http://www.eclipse.org/sirius/properties/1.0.0/ext/widgets/reference" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/description/tool/1.1.0" name="project" version="12.0.0.2017041100">
  <ownedViewpoints name="MyViewpoint">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="Process" domainClass="process_modeling::Process">
      <defaultLayer name="Default">
        <nodeMappings name="StartStep" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="aql: self.elements -> select(step | step.type.toString() = 'START' and step.isErrorGroup=false and step.eContainer().eClass() = process_modeling::Process)" domainClass="process_modeling::ProcessStep">
          <conditionnalStyles predicateExpression="aql: self.type.toString() = 'START2'">
            <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" labelSize="14" showIcon="false" labelExpression="!" sizeComputationExpression="4" labelPosition="node">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: self.type.toString() = 'START'">
            <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" borderLineStyle="dash" labelSize="9" showIcon="false" labelExpression="Start" sizeComputationExpression="5" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
            </style>
          </conditionnalStyles>
        </nodeMappings>
        <nodeMappings name="EndStep" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="aql: self.elements -> select(step | step.type.toString() = 'END' and step.isErrorGroup=false and step.eContainer().eClass() = process_modeling::Process)" documentation="Nekada smo imali ovo u Semantic Candidate Expression:&#xD;&#xA;aql: self.elements -> select(step | step.type.toString() = 'END')" domainClass="process_modeling::ProcessStep">
          <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" labelSize="9" showIcon="false" labelExpression="End" sizeComputationExpression="5" labelPosition="node" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="DecisionGate" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="aql: self.elements -> select(gate | gate.type.toString() = 'DECISION' and gate.isErrorGroup=false and gate.eContainer().eClass() = process_modeling::Process)" domainClass="process_modeling::Gate">
          <style xsi:type="style:LozengeNodeDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" labelExpression="DEC" sizeComputationExpression="5" labelPosition="node" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="ParallelismGate" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="aql: self.elements -> select(gate | gate.type.toString() = 'PARALLELISM' and gate.isErrorGroup=false and gate.eContainer().eClass() = process_modeling::Process)" documentation="Nekada smo imali ovo u Semantic Candidate Expression:&#xD;&#xA;aql: self.elements -> select(gate | gate.type.toString() = 'PARALLELISM')" domainClass="process_modeling::Gate">
          <style xsi:type="style:LozengeNodeDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" labelExpression="PAR" sizeComputationExpression="5" labelPosition="node" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="CollaborationGate" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="aql: self.elements -> select(gate | gate.type.toString() = 'COLLABORATION' and gate.isErrorGroup=false and gate.eContainer().eClass() = process_modeling::Process)" domainClass="process_modeling::Gate">
          <style xsi:type="style:LozengeNodeDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" labelExpression="COL" sizeComputationExpression="5" labelPosition="node" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="VariationGate" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="aql: self.elements -> select(gate | gate.type.toString() = 'VARIATION' and gate.isErrorGroup=false and gate.eContainer().eClass() = process_modeling::Process)" domainClass="process_modeling::Gate">
          <style xsi:type="style:LozengeNodeDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" labelExpression="VAR" sizeComputationExpression="5" labelPosition="node" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="SubProcess" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::SubProcess">
          <borderedNodeMappings name="SubProcessParameter" semanticCandidatesExpression="aql: self.parameters -> select(parameter | parameter.eContainer().eClass() = process_modeling::SubProcess)" domainClass="process_modeling::ProcessParameter">
            <conditionnalStyles predicateExpression="aql: self.type = process_modeling::EProcessParameterType::INPUT_PRODUCT">
              <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="2" labelSize="9" showIcon="false" labelExpression="IN" sizeComputationExpression="4" labelPosition="node" color="//@userColorsPalettes[name='myColor']/@entries[name='Product_Light_Blue']">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql: self.type = process_modeling::EProcessParameterType::OUTPUT_PRODUCT">
              <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="2" labelSize="9" showIcon="false" labelExpression="OUT" sizeComputationExpression="4" labelPosition="node" color="//@userColorsPalettes[name='myColor']/@entries[name='Product_Blue']">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </conditionnalStyles>
          </borderedNodeMappings>
          <style xsi:type="style:SquareDescription" borderSizeComputationExpression="2" borderLineStyle="dash" labelSize="9" iconPath="/process_modelling_design/icons/process_step/subprocess20x20a.png" labelPosition="node" resizeKind="NSEW" width="15" height="7" color="//@userColorsPalettes[name='myColor']/@entries[name='Sub_Process_Light_Gray']">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="ProcessParameter" semanticCandidatesExpression="aql: self.parameters -> select(parameter | parameter.eContainer().eClass() = process_modeling::Process)" domainClass="process_modeling::ProcessParameter">
          <conditionnalStyles predicateExpression="aql: self.type = process_modeling::EProcessParameterType::INPUT_PRODUCT">
            <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="2" labelSize="9" showIcon="false" labelExpression="IN" sizeComputationExpression="4" labelPosition="node" color="//@userColorsPalettes[name='myColor']/@entries[name='Product_Light_Blue']">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: self.type = process_modeling::EProcessParameterType::OUTPUT_PRODUCT">
            <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="2" labelSize="9" showIcon="false" labelExpression="OUT" sizeComputationExpression="4" labelPosition="node" color="//@userColorsPalettes[name='myColor']/@entries[name='Product_Blue']">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
        </nodeMappings>
        <edgeMappings name="FlowRelataionship" semanticCandidatesExpression="[Relationship.allInstances() -> select(relationship | relationship.type.toString() = 'FLOW')/]" sourceMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='StartStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='DecisionGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='ParallelismGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='CollaborationGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='UnorderedSteps'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='VariationGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='SubProcess']" targetMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='EndStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='DecisionGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='ParallelismGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='CollaborationGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='UnorderedSteps'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='VariationGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='SubProcess']" targetFinderExpression="aql: self.eContainer().elements->select(element | element.id = self.target.id)" sourceFinderExpression="aql: self.eContainer().elements->select(element | element.id = self.source.id)" domainClass="process_modeling::Relationship" useDomainElement="true">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="9" showIcon="false" labelExpression="feature:logicalCondition">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="CollaborationRelationship" semanticCandidatesExpression="[Relationship.allInstances() -> select(relationship | relationship.type.toString() = 'COLLABORATION')/]" documentation="Ranije:&#xD;&#xA;aql: self.relations -> select(relation | relation.type.toString() = 'COLLABORATION')" sourceMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']" targetMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']" targetFinderExpression="aql: self.eContainer().elements ->select(element | element.id = self.target.id)" sourceFinderExpression="aql: self.eContainer().elements->select(element | element.id = self.source.id)" domainClass="process_modeling::Relationship" useDomainElement="true">
          <style lineStyle="dash_dot" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="9" showIcon="false" labelExpression="feature:message">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="MaterialRelationship" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@toolSections.3/@ownedTools[name='Delete%20Product%20Equivalent%20Link']" sourceMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='Product'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='RegularStepImport'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']" targetMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='Product']" targetFinderExpression="aql: self.equivalent">
          <style lineStyle="dash" targetArrow="InputClosedArrow" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="9" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ContainmentRelationship" sourceMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']" targetMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='Product']" targetFinderExpression="aql: self.inProducts->union(self.outProducts)">
          <style targetArrow="NoDecoration" sizeComputationExpression="2" foldingStyle="SOURCE">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="9" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ContainmentRelationship2" sourceMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']" targetMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='Capability']" targetFinderExpression="aql: self.capability">
          <style targetArrow="NoDecoration" sizeComputationExpression="2" foldingStyle="SOURCE">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="9" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="UnorderedContainmentRelationship" sourceMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='UnorderedSteps']" targetMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='UnorderedSteps']/@subContainerMappings[name='UnorderedStep']" targetFinderExpression="aql: self.steps">
          <style targetArrow="NoDecoration" sizeComputationExpression="0" foldingStyle="SOURCE">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <centerLabelStyleDescription labelSize="9" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ParameterRelationship" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@toolSections.2/@ownedTools[name='Delete%20Parameter%20Link']" sourceMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='ProcessParameter'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='SubProcess']/@borderedNodeMappings[name='SubProcessParameter']" targetMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='Product']" targetFinderExpression="aql: self.product">
          <conditionnalStyles predicateExpression="aql: self.type = process_modeling::EProcessParameterType::INPUT_PRODUCT">
            <style lineStyle="dash" targetArrow="InputFillClosedArrow" sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <centerLabelStyleDescription labelSize="9" showIcon="false">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: self.type = process_modeling::EProcessParameterType::OUTPUT_PRODUCT">
            <style lineStyle="dash" sourceArrow="InputFillClosedArrow" targetArrow="NoDecoration" sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <centerLabelStyleDescription labelSize="9" showIcon="false">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="ParameterRelationship2" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@toolSections.2/@ownedTools[name='Delete%20Parameter%20Link']" sourceMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='ProcessParameter'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='SubProcess']/@borderedNodeMappings[name='SubProcessParameter']" targetMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='ProcessParameter'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='SubProcess']/@borderedNodeMappings[name='SubProcessParameter']" targetFinderExpression="aql: self.parameter">
          <conditionnalStyles predicateExpression="aql: self.type = process_modeling::EProcessParameterType::INPUT_PRODUCT">
            <style lineStyle="dash" targetArrow="InputFillClosedArrow" sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <centerLabelStyleDescription labelSize="9" showIcon="false">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: self.type = process_modeling::EProcessParameterType::OUTPUT_PRODUCT">
            <style lineStyle="dash" sourceArrow="InputFillClosedArrow" targetArrow="NoDecoration" sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <centerLabelStyleDescription labelSize="9" showIcon="false">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <containerMappings name="RegularStep" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="aql: self.elements -> select(step | step.type.toString() = 'REGULAR' and step.isErrorGroup=false and step.eContainer().eClass() = process_modeling::Process)" domainClass="process_modeling::ProcessStep">
          <conditionnalStyles predicateExpression="aql:self.notation.toString()='OPERATION' ">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" iconPath="/process_modelling_design/icons/process_step/notations/operation20x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.notation.toString()='INSPECTION'">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" iconPath="/process_modelling_design/icons/process_step/notations/inspection20x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.notation.toString()='TRANSPORTATION'">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" iconPath="/process_modelling_design/icons/process_step/notations/transportation30x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.notation.toString()='COMPOSITE'">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" iconPath="/process_modelling_design/icons/process_step/notations/composite77x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.notation.toString()='CONFIGURATION'">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" iconPath="/process_modelling_design/icons/process_step/notations/configuration20x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.notation.toString()='DELAY'">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" iconPath="/process_modelling_design/icons/process_step/notations/delay20x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.notation.toString()='NONE'">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" iconPath="/process_modelling_design/icons/process_step/notations/operation20x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </conditionnalStyles>
        </containerMappings>
        <containerMappings name="Product" preconditionExpression="aql: self.eContainer().eContainer().eClass() = process_modeling::Process and self.eContainer().isErrorGroup = false" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::Product" childrenPresentation="List">
          <subNodeMappings name="Constraint" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::Constraint">
            <style xsi:type="style:SquareDescription" labelSize="9" showIcon="false" labelExpression="aql: self.physicalDimension + ' ' + self.relationalOperator + ' ' + self.value + ' ' + self.metricUnit" iconPath="/process_modelling_design/icons/constraint16x16.png" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <subContainerMappings name="Product" preconditionExpression="aql: self.eContainer().eContainer().eClass() = process_modeling::Process and self.eContainer().isErrorGroup = false" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::Product" childrenPresentation="List">
            <subNodeMappings name="Constraint" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::Constraint">
              <style xsi:type="style:SquareDescription" labelSize="9" showIcon="false" labelExpression="aql: self.physicalDimension + ' ' + self.relationalOperator + ' ' + self.value + ' ' + self.metricUnit" iconPath="/process_modelling_design/icons/constraint16x16.png" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </subNodeMappings>
            <conditionnalStyles predicateExpression="aql: self.eContainer().inProducts -> exists(product | product = self and self.isStored = true)">
              <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" labelExpression="aql: 'IN: ' + self.name" iconPath="/process_modelling_design/icons/process_step/resources/storage25x20.png" roundedCorner="true" widthComputationExpression="12" heightComputationExpression="7" backgroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Light_Blue']" foregroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Light_Blue']">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql: self.eContainer().outProducts -> exists(product | product = self and self.isStored = true)">
              <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" labelExpression="aql: 'OUT: ' + self.name" iconPath="/process_modelling_design/icons/process_step/resources/storage25x20.png" roundedCorner="true" widthComputationExpression="12" heightComputationExpression="7" backgroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Blue']" foregroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Blue']">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql: self.eContainer().inProducts -> exists(product | product = self and self.isStored = false)">
              <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" labelExpression="aql: 'IN: ' + self.name" roundedCorner="true" widthComputationExpression="12" heightComputationExpression="7" backgroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Light_Blue']" foregroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Light_Blue']">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql: self.eContainer().outProducts -> exists(product | product = self and self.isStored = false)">
              <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" labelExpression="aql: 'OUT: ' + self.name" roundedCorner="true" widthComputationExpression="12" heightComputationExpression="7" backgroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Blue']" foregroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Blue']">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
              </style>
            </conditionnalStyles>
          </subContainerMappings>
          <subContainerMappings name="Product" preconditionExpression="aql: self.eContainer().eContainer().eClass() = process_modeling::Process and self.eContainer().isErrorGroup = false" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::Product" childrenPresentation="List">
            <subNodeMappings name="Constraint" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::Constraint">
              <style xsi:type="style:SquareDescription" labelSize="9" showIcon="false" labelExpression="aql: self.physicalDimension + ' ' + self.relationalOperator + ' ' + self.value + ' ' + self.metricUnit" iconPath="/process_modelling_design/icons/constraint16x16.png" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </subNodeMappings>
            <subContainerMappings name="Product" preconditionExpression="aql: self.eContainer().eContainer().eClass() = process_modeling::Process and self.eContainer().isErrorGroup = false" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::Product" childrenPresentation="List">
              <subNodeMappings name="Constraint" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::Constraint">
                <style xsi:type="style:SquareDescription" labelSize="9" showIcon="false" labelExpression="aql: self.physicalDimension + ' ' + self.relationalOperator + ' ' + self.value + ' ' + self.metricUnit" iconPath="/process_modelling_design/icons/constraint16x16.png" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </subNodeMappings>
              <conditionnalStyles predicateExpression="aql: self.eContainer().inProducts -> exists(product | product = self and self.isStored = true)">
                <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" labelExpression="aql: 'IN: ' + self.name" iconPath="/process_modelling_design/icons/process_step/resources/storage25x20.png" roundedCorner="true" widthComputationExpression="12" heightComputationExpression="7" backgroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Light_Blue']" foregroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Light_Blue']">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql: self.eContainer().outProducts -> exists(product | product = self and self.isStored = true)">
                <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" labelExpression="aql: 'OUT: ' + self.name" iconPath="/process_modelling_design/icons/process_step/resources/storage25x20.png" roundedCorner="true" widthComputationExpression="12" heightComputationExpression="7" backgroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Blue']" foregroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Blue']">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql: self.eContainer().inProducts -> exists(product | product = self and self.isStored = false)">
                <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" labelExpression="aql: 'IN: ' + self.name" roundedCorner="true" widthComputationExpression="12" heightComputationExpression="7" backgroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Light_Blue']" foregroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Light_Blue']">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql: self.eContainer().outProducts -> exists(product | product = self and self.isStored = false)">
                <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" labelExpression="aql: 'OUT: ' + self.name" roundedCorner="true" widthComputationExpression="12" heightComputationExpression="7" backgroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Blue']" foregroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Blue']">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
                </style>
              </conditionnalStyles>
            </subContainerMappings>
            <conditionnalStyles predicateExpression="aql: self.eContainer().inProducts -> exists(product | product = self and self.isStored = true)">
              <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" labelExpression="aql: 'IN: ' + self.name" iconPath="/process_modelling_design/icons/process_step/resources/storage25x20.png" roundedCorner="true" widthComputationExpression="12" heightComputationExpression="7" backgroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Light_Blue']" foregroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Light_Blue']">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql: self.eContainer().outProducts -> exists(product | product = self and self.isStored = true)">
              <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" labelExpression="aql: 'OUT: ' + self.name" iconPath="/process_modelling_design/icons/process_step/resources/storage25x20.png" roundedCorner="true" widthComputationExpression="12" heightComputationExpression="7" backgroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Blue']" foregroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Blue']">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql: self.eContainer().inProducts -> exists(product | product = self and self.isStored = false)">
              <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" labelExpression="aql: 'IN: ' + self.name" roundedCorner="true" widthComputationExpression="12" heightComputationExpression="7" backgroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Light_Blue']" foregroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Light_Blue']">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql: self.eContainer().outProducts -> exists(product | product = self and self.isStored = false)">
              <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" labelExpression="aql: 'OUT: ' + self.name" roundedCorner="true" widthComputationExpression="12" heightComputationExpression="7" backgroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Blue']" foregroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Blue']">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
              </style>
            </conditionnalStyles>
          </subContainerMappings>
          <conditionnalStyles predicateExpression="aql: self.eContainer().inProducts -> exists(product | product = self and self.isStored = true)">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" labelExpression="aql: 'IN: ' + self.name" iconPath="/process_modelling_design/icons/process_step/resources/storage25x20.png" roundedCorner="true" widthComputationExpression="12" heightComputationExpression="7" backgroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Light_Blue']" foregroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Light_Blue']">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: self.eContainer().outProducts -> exists(product | product = self and self.isStored = true)">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" labelExpression="aql: 'OUT: ' + self.name" iconPath="/process_modelling_design/icons/process_step/resources/storage25x20.png" roundedCorner="true" widthComputationExpression="12" heightComputationExpression="7" backgroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Blue']" foregroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Blue']">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: self.eContainer().inProducts -> exists(product | product = self and self.isStored = false)">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" labelExpression="aql: 'IN: ' + self.name" roundedCorner="true" widthComputationExpression="12" heightComputationExpression="7" backgroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Light_Blue']" foregroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Light_Blue']">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: self.eContainer().outProducts -> exists(product | product = self and self.isStored = false)">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" labelExpression="aql: 'OUT: ' + self.name" roundedCorner="true" widthComputationExpression="12" heightComputationExpression="7" backgroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Blue']" foregroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Blue']">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
            </style>
          </conditionnalStyles>
        </containerMappings>
        <containerMappings name="Capability" preconditionExpression="aql: self.eContainer().eContainer().eClass() = process_modeling::Process and self.eContainer().isErrorGroup = false" semanticCandidatesExpression="feature:eAllContents" documentation="[Capability.allInstances() -> select(cap | cap.eContainer(ProcessStep).isErrorGroup=false)/]" domainClass="process_modeling::Capability" childrenPresentation="List">
          <subNodeMappings name="Constraint" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::Constraint">
            <style xsi:type="style:SquareDescription" labelSize="9" showIcon="false" labelExpression="aql: self.physicalDimension + ' ' + self.relationalOperator + ' ' + self.value + ' ' + self.metricUnit" iconPath="/process_modelling_design/icons/constraint16x16.png" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="Parameter" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::Parameter">
            <style xsi:type="style:SquareDescription" labelSize="9" showIcon="false" labelExpression="aql: self.key + ' : ' + self.value" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" roundedCorner="true" widthComputationExpression="12" heightComputationExpression="7">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
          </style>
        </containerMappings>
        <containerMappings name="UnorderedSteps" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="aql: self.elements -> select(unordered | unordered.isErrorGroup=false)" domainClass="process_modeling::UnorderedSteps">
          <subContainerMappings xsi:type="description_1:ContainerMappingImport" name="UnorderedStep" semanticCandidatesExpression="aql: self.steps -> select(step | step.type.toString() = 'REGULAR' and step.isErrorGroup=false and step.eContainer().eClass() = process_modeling::UnorderedSteps)" domainClass="process_modeling::ProcessStep" importedMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']"/>
          <subContainerMappings xsi:type="description_1:ContainerMappingImport" name="UnorderedCapability" preconditionExpression="aql: self.eContainer().eContainer().eClass() = process_modeling::UnorderedSteps and self.eContainer().isErrorGroup = false" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::Capability" reusedNodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='Capability']/@subNodeMappings[name='Constraint'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='Capability']/@subNodeMappings[name='Parameter']" childrenPresentation="List" importedMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='Capability']"/>
          <subContainerMappings xsi:type="description_1:ContainerMappingImport" name="UnorderedProduct" preconditionExpression="aql: self.eContainer().eContainer().eClass() = process_modeling::UnorderedSteps and self.eContainer().isErrorGroup = false" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::Product" reusedNodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='Product']/@subNodeMappings[name='Constraint']" childrenPresentation="List" importedMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='Product']"/>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="2" labelSize="9" iconPath="/process_modelling_design/icons/process_step/Unordered20x20.png" backgroundStyle="Liquid">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <toolSections name="Steps">
          <ownedTools xsi:type="tool:NodeCreationDescription" documentation="[ProcessStep.allInstances() -> forAll(ps : ProcessStep | ps.type.toString() = 'END' or ps.type.toString() = 'REGULAR')/]&#xD;&#xA;[ProcessStep.allInstances() -> forAll(ps : ProcessStep | ps.type.toString() = 'END' or ps.type.toString() = 'REGULAR')/]&#xD;&#xA;&#xD;&#xA;ne radi??? aql: container.elements -> forAll(ps | ps.type.toString() = 'END' or ps.type.toString() = 'REGULAR')" name="Start" precondition="aql: container.elements -> forAll(ps | (ps.eClass() = process_modeling::ProcessStep) implies (ps.type.toString() = 'END' or ps.type.toString() = 'REGULAR'))" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='StartStep']" iconPath="/process_modelling_design/icons/process_step/StartStep32x32.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::ProcessStep" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="START"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="false"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="Start"/>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="startStep" valueExpression="var:instance"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" documentation="[ProcessStep.allInstances() -> forAll(ps : ProcessStep | not (ps.type.toString() = 'END'))/]" name="End" precondition="aql: not(container.elements -> exists(ps | ps.type.toString() = 'END'))" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='EndStep']" iconPath="/process_modelling_design/icons/process_step/EndStep32x32.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::ProcessStep" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="END"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="false"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="End"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Regular" forceRefresh="true" elementsToSelect="aql: instance" containerMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']" iconPath="/process_modelling_design/icons/process_step/RegularStep32x32a.png" extraMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='UnorderedSteps']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:Switch">
                  <cases conditionExpression="aql: container.eClass() = process_modeling::UnorderedSteps">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::ProcessStep" referenceName="steps">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="REGULAR"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="notation" valueExpression="OPERATION"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="false"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Capability" referenceName="capability">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </cases>
                  <default>
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::ProcessStep" referenceName="elements">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="REGULAR"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="notation" valueExpression="OPERATION"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="false"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Capability" referenceName="capability">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </default>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Unordered" forceRefresh="true" containerMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='UnorderedSteps']" iconPath="/process_modelling_design/icons/process_step/UnorderedSteps32x69a.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::UnorderedSteps" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="false"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="Delete Relationships when Deleting Elements" forceRefresh="true">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Switch">
                <cases conditionExpression="aql:element.inRelationships -> union(element.outRelationships) -> size() > 0">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:element.inRelationships -> union(element.outRelationships)">
                    <subModelOperations xsi:type="tool_1:RemoveElement">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                        <subModelOperations xsi:type="tool_1:RemoveElement"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </cases>
                <cases conditionExpression="aql:element.inRelationships -> union(element.outRelationships) -> size() = 0">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                    <subModelOperations xsi:type="tool_1:RemoveElement"/>
                  </subModelOperations>
                </cases>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Gates">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Decision" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='DecisionGate']" iconPath="/process_modelling_design/icons/gates/DecisionGate32x32.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Gate" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="DECISION"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="false"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="Decision"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Parallelism" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='ParallelismGate']" iconPath="/process_modelling_design/icons/gates/ParallelismGate32x32.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Gate" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="PARALLELISM"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="false"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="Parallelism"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Collaboration" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='CollaborationGate']" iconPath="/process_modelling_design/icons/gates/CollaborationGate32x32.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Gate" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="COLLABORATION"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="false"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="Collaboration"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Variation" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='VariationGate']" iconPath="/process_modelling_design/icons/gates/VariationGate32x32a.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Gate" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="VARIATION"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="false"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="Variation"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Sub-Processes">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Sub-Process" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='SubProcess']" iconPath="/process_modelling_design/icons/process_step/SubProcess32x69.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::SubProcess" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="false"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Input Parameter" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='SubProcess']/@borderedNodeMappings[name='SubProcessParameter'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='ProcessParameter']" iconPath="/process_modelling_design/icons/parameters/inparameter32x32.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::ProcessParameter" referenceName="parameters">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="INPUT_PRODUCT"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Output Parameter" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='SubProcess']/@borderedNodeMappings[name='SubProcessParameter'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='ProcessParameter']" iconPath="/process_modelling_design/icons/parameters/outparameter32x32.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::ProcessParameter" referenceName="parameters">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="OUTPUT_PRODUCT"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="Delete Parameter Link" forceRefresh="true">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_1:Unset" featureName="product"/>
                <subModelOperations xsi:type="tool_1:Unset" featureName="parameter"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Capability and Product">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Capability" precondition="[container.oclIsTypeOf(ProcessStep)/]" forceRefresh="true" containerMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='Capability']" iconPath="/process_modelling_design/icons/process_step/products_and_capability/capability55x32.png" extraMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Capability" referenceName="capability">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Input Product" precondition="[container.oclIsTypeOf(ProcessStep)/]" forceRefresh="true" containerMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='Product']" iconPath="/process_modelling_design/icons/process_step/products_and_capability/inProduct55x32.png" extraMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Product" referenceName="inProducts">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="quantity" valueExpression="1"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Output Product" precondition="[container.oclIsTypeOf(ProcessStep)/]" forceRefresh="true" containerMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='Product']" iconPath="/process_modelling_design/icons/process_step/products_and_capability/outProduct55x32.png" extraMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Product" referenceName="outProducts">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="quantity" valueExpression="1"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Constraint" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='Capability']/@subNodeMappings[name='Constraint'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='Product']/@subNodeMappings[name='Constraint']" iconPath="/process_modelling_design/icons/process_step/products_and_capability/constraint55x34.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Constraint" referenceName="constraints"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Parameter" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='Capability']/@subNodeMappings[name='Parameter']" iconPath="/process_modelling_design/icons/process_step/products_and_capability/parameter55x32.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Parameter" referenceName="parameters"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="Delete Product Equivalent Link" forceRefresh="true">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Unset" featureName="equivalent"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Relations">
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Flow" precondition="aql: preTarget.eContainer().eClass() != process_modeling::UnorderedSteps" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@edgeMappings[name='FlowRelataionship']" iconPath="/process_modelling_design/icons/relationships/RelationFlow32x32.png" connectionStartPrecondition="aql: preSource.eContainer().eClass() != process_modeling::UnorderedSteps">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.eContainer()">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Relationship" referenceName="relationships">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="FLOW"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="source" valueExpression="[source/]"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="target" valueExpression="[target/]"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="[source.id + '_' + target.id + '_flow'/]"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="outRelationships" valueExpression="[Relationship.allInstances() -> select(rel : Relationship | rel.id = (source.id + '-' + target.id + '-flow'))/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:target">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="inRelationships" valueExpression="[Relationship.allInstances() -> select(rel : Relationship | rel.id = (source.id + '-' + target.id + '-flow'))/]"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Collaboration" precondition="aql: preTarget.eContainer().eClass() != process_modeling::UnorderedSteps" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@edgeMappings[name='CollaborationRelationship']" iconPath="/process_modelling_design/icons/relationships/RelationCollaboration32x32a.png" connectionStartPrecondition="aql: preSource.eContainer().eClass() != process_modeling::UnorderedSteps">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.eContainer()">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Relationship" referenceName="relationships">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="COLLABORATION"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="source" valueExpression="[source/]"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="target" valueExpression="[target/]"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="[source.id + '_' + target.id + '_collaboration'/]"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ourRelationships" valueExpression="[Relationship.allInstances() -> select(rel : Relationship | rel.id = (source.id + '-' + target.id + '-collaboration'))/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:target">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="inRelationships" valueExpression="[Relationship.allInstances() -> select(rel : Relationship | rel.id = (source.id + '-' + target.id + '-collaboration'))/]"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Product Equivalent" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@edgeMappings[name='MaterialRelationship']" iconPath="/process_modelling_design/icons/relationships/RelationshipEquivalent32x32.png">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Switch">
                <cases conditionExpression="aql: source.eClass() = process_modeling::ProcessStep">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: source">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Product" referenceName="inProducts" variableName="inProd">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="equivalent" valueExpression="var:target"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:target.name"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="isStored" valueExpression="false"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="quantity" valueExpression="aql:target.quantity"/>
                      <subModelOperations xsi:type="tool_1:For" expression="aql:target.constraints">
                        <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:inProd">
                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Constraint" referenceName="constraints">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="physicalDimension" valueExpression="aql:i.physicalDimension"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="relationalOperator" valueExpression="aql:i.relationalOperator"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:i.value"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="metricUnit" valueExpression="aql:i.metricUnit"/>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </cases>
                <default>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="equivalent" valueExpression="var:target"/>
                  </subModelOperations>
                </default>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Parameter Link" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@edgeMappings[name='ParameterRelationship'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@edgeMappings[name='ParameterRelationship2']" iconPath="/process_modelling_design/icons/relationships/RelationshipParameter32x32.png">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: source">
                <subModelOperations xsi:type="tool_1:Switch">
                  <cases conditionExpression="aql: target.eClass() = process_modeling::Product">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="product" valueExpression="aql:target"/>
                  </cases>
                  <default>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="parameter" valueExpression="aql:target"/>
                  </default>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.status.toString()='ACTIVE'">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.6/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.0/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.2/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.6/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.0/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.2/@style" referenceName="backgroundColor" value="//@userColorsPalettes[name='myColor']/@entries[name='PS_Active_Light_Blue']"/>
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.6/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.0/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.2/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.6/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.0/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.2/@style" referenceName="foregroundColor" value="//@userColorsPalettes[name='myColor']/@entries[name='PS_Active_Light_Blue']"/>
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='StartStep']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='EndStep']/@style" referenceName="color" value="//@userColorsPalettes[name='myColor']/@entries[name='PS_Active_Light_Blue']"/>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.status.toString()='ERROR'">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.6/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.0/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.2/@style" referenceName="backgroundColor" value="//@userColorsPalettes[name='myColor']/@entries[name='PS_Error_Light_Red']"/>
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.6/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.0/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.2/@style" referenceName="foregroundColor" value="//@userColorsPalettes[name='myColor']/@entries[name='PS_Error_Light_Red']"/>
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='StartStep']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='EndStep']/@style" referenceName="color" value="//@userColorsPalettes[name='myColor']/@entries[name='PS_Error_Light_Red']"/>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.status.toString()='NONE'">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.6/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.0/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.2/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.6/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.0/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.2/@style" referenceName="backgroundColor">
              <value href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </featureCustomizations>
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.6/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.0/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.2/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.6/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.0/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.2/@style" referenceName="foregroundColor">
              <value href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </featureCustomizations>
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='StartStep']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='EndStep']/@style" referenceName="color">
              <value href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </featureCustomizations>
          </vsmElementCustomizations>
        </customization>
      </defaultLayer>
      <additionalLayers name="ErrorHandling">
        <nodeMappings name="ErrorDecisionGate" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="[Gate.allInstances() -> select(gate | gate.type.toString() = 'DECISION' and gate.isErrorGroup=true)/]" domainClass="process_modeling::Gate">
          <style xsi:type="style:LozengeNodeDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" labelExpression="DEC" sizeComputationExpression="5" labelPosition="node" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="ErrorParallelismGate" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="[Gate.allInstances() -> select(gate | gate.type.toString() = 'PARALLELISM' and gate.isErrorGroup=true)/]" documentation="Nekada smo imali ovo u Semantic Candidate Expression:&#xD;&#xA;aql: self.elements -> select(gate | gate.type.toString() = 'PARALLELISM')" domainClass="process_modeling::Gate">
          <style xsi:type="style:LozengeNodeDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" labelExpression="PAR" sizeComputationExpression="5" labelPosition="node" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="ErrorCollaborationGate" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="[Gate.allInstances() -> select(gate | gate.type.toString() = 'COLLABORATION' and gate.isErrorGroup=true)/]" domainClass="process_modeling::Gate">
          <style xsi:type="style:LozengeNodeDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" labelExpression="COL" sizeComputationExpression="5" labelPosition="node" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="ErrorVariationGate" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="[Gate.allInstances() -> select(gate | gate.type.toString() = 'VARIATION' and gate.isErrorGroup=true)/]" domainClass="process_modeling::Gate">
          <style xsi:type="style:LozengeNodeDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" labelExpression="VAR" sizeComputationExpression="5" labelPosition="node" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
          </style>
        </nodeMappings>
        <edgeMappings name="ContainmentRelationshipError1" sourceMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']" targetMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='Product']" targetFinderExpression="aql: self.inProducts->union(self.outProducts)">
          <style targetArrow="NoDecoration" sizeComputationExpression="2" foldingStyle="SOURCE">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="9" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ContainmentRelationshipError2" sourceMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']" targetMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='Capability']" targetFinderExpression="aql: self.capability">
          <style targetArrow="NoDecoration" sizeComputationExpression="2" foldingStyle="SOURCE">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="9" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ErrorNode-StepRelationship" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@toolSections.1/@ownedTools[name='Delete%20Local%20Error%20Handler%20Link']" sourceMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='RegularStepImport']/@borderedNodeMappings[name='Error'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@borderedNodeMappings[name='ErrorOnErrorStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='UnorderedStepsImport']/@subContainerMappings[name='UnorderedStepImport']/@borderedNodeMappings[name='Bordered%20Unordered%20Error'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorUnorderedSteps']/@subContainerMappings[name='ErrorUnorderedStep']/@borderedNodeMappings[name='Bordered%20Unordered%20ErrorOnErrorStep']" targetMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@nodeMappings[name='ErrorCollaborationGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@nodeMappings[name='ErrorDecisionGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@nodeMappings[name='ErrorParallelismGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@nodeMappings[name='ErrorVariationGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorUnorderedSteps']" targetFinderExpression="aql: self.localErrorHandler">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            <centerLabelStyleDescription labelSize="9" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ErrorRelataionship" semanticCandidatesExpression="[Relationship.allInstances() -> select(relationship | relationship.type.toString() = 'ERROR')/]" sourceMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@nodeMappings[name='ErrorCollaborationGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@nodeMappings[name='ErrorDecisionGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@nodeMappings[name='ErrorParallelismGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@nodeMappings[name='ErrorVariationGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorUnorderedSteps']" targetMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@nodeMappings[name='ErrorCollaborationGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@nodeMappings[name='ErrorDecisionGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@nodeMappings[name='ErrorParallelismGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@nodeMappings[name='ErrorVariationGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='EndStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorUnorderedSteps'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='UnorderedSteps'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='ParallelismGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='DecisionGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='VariationGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='CollaborationGate']" targetFinderExpression="aql: self.eContainer().elements->select(element | element.id = self.target.id)" sourceFinderExpression="aql: self.eContainer().elements->select(element | element.id = self.source.id)" domainClass="process_modeling::Relationship" useDomainElement="true">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            <centerLabelStyleDescription labelSize="9" showIcon="false" labelExpression="feature:logicalCondition">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ErrorUnorderedContainmentRelationship" sourceMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorUnorderedSteps']" targetMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorUnorderedSteps']/@subContainerMappings[name='ErrorUnorderedStep']" targetFinderExpression="aql: self.steps">
          <style targetArrow="NoDecoration" sizeComputationExpression="0" foldingStyle="SOURCE">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <centerLabelStyleDescription labelSize="9" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings xsi:type="description_1:ContainerMappingImport" name="RegularStepImport" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="aql: self.elements -> select(step | step.type.toString() = 'REGULAR' and step.isErrorGroup=false and step.eContainer().eClass() = process_modeling::Process)" domainClass="process_modeling::ProcessStep" importedMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='RegularStep']">
          <borderedNodeMappings name="Error" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@toolSections.0/@ownedTools[name='Open%20global%20error%20handler']" domainClass="process_modeling::Error">
            <conditionnalStyles predicateExpression="aql: self.domain = process_modeling::EErrorDomain::LOCAL and self.type = process_modeling::EErrorType::NAMED_ERROR">
              <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" labelSize="14" showIcon="false" labelExpression="!" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Domain: ' + self.domain.toString().toLower().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' \n Status: ' + self.status.toString().toLower().toUpperFirst() + ' \n Message: ' + self.message + ' \n Description: ' + self.description + ' \n Mode: ' + self.mode + ' \n Effect: ' + self.effect + ' \n Cause: ' + self.cause + ' \n Prevention: ' + self.prevention + ' \n Severity: ' + self.severity + ' \n Occurrence: ' + self.occurrence + ' \n Detection: ' + self.detection + ' '/]" sizeComputationExpression="4" labelPosition="node">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql: self.domain = process_modeling::EErrorDomain::GLOBAL and self.type = process_modeling::EErrorType::NAMED_ERROR">
              <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" borderLineStyle="dot" labelSize="14" showIcon="false" labelExpression="!" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Domain: ' + self.domain.toString().toLower().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' \n Status: ' + self.status.toString().toLower().toUpperFirst() + ' \n Message: ' + self.message + ' \n Description: ' + self.description + ' \n Mode: ' + self.mode + ' \n Effect: ' + self.effect + ' \n Cause: ' + self.cause + ' \n Prevention: ' + self.prevention + ' \n Severity: ' + self.severity + ' \n Occurrence: ' + self.occurrence + ' \n Detection: ' + self.detection + ' '/]" sizeComputationExpression="4" labelPosition="node">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql: self.domain = process_modeling::EErrorDomain::LOCAL and self.type = process_modeling::EErrorType::DEFAULT">
              <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" labelSize="14" showIcon="false" labelExpression="!" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Domain: ' + self.domain.toString().toLower().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' \n Status: ' + self.status.toString().toLower().toUpperFirst() + ' \n Message: ' + self.message + ' \n Description: ' + self.description + ' \n Mode: ' + self.mode + ' \n Effect: ' + self.effect + ' \n Cause: ' + self.cause + ' \n Prevention: ' + self.prevention + ' \n Severity: ' + self.severity + ' \n Occurrence: ' + self.occurrence + ' \n Detection: ' + self.detection + ' '/]" sizeComputationExpression="4" labelPosition="node">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql: self.domain = process_modeling::EErrorDomain::GLOBAL and self.type = process_modeling::EErrorType::DEFAULT">
              <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" borderLineStyle="dot" labelSize="14" showIcon="false" labelExpression="!" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Domain: ' + self.domain.toString().toLower().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' \n Status: ' + self.status.toString().toLower().toUpperFirst() + ' \n Message: ' + self.message + ' \n Description: ' + self.description + ' \n Mode: ' + self.mode + ' \n Effect: ' + self.effect + ' \n Cause: ' + self.cause + ' \n Prevention: ' + self.prevention + ' \n Severity: ' + self.severity + ' \n Occurrence: ' + self.occurrence + ' \n Detection: ' + self.detection + ' '/]" sizeComputationExpression="4" labelPosition="node">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </style>
            </conditionnalStyles>
          </borderedNodeMappings>
        </containerMappings>
        <containerMappings name="ErrorStep" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="aql: self.elements -> select(step | step.type.toString() = 'REGULAR' and step.isErrorGroup=true and step.eContainer().eClass() = process_modeling::Process)" domainClass="process_modeling::ProcessStep">
          <borderedNodeMappings name="ErrorOnErrorStep" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@toolSections.0/@ownedTools[name='Open%20global%20error%20handler']" domainClass="process_modeling::Error">
            <conditionnalStyles predicateExpression="aql: self.domain = process_modeling::EErrorDomain::LOCAL and self.type = process_modeling::EErrorType::NAMED_ERROR">
              <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" labelSize="14" showIcon="false" labelExpression="!" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Domain: ' + self.domain.toString().toLower().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' \n Status: ' + self.status.toString().toLower().toUpperFirst() + ' \n Message: ' + self.message + ' \n Description: ' + self.description + ' \n Mode: ' + self.mode + ' \n Effect: ' + self.effect + ' \n Cause: ' + self.cause + ' \n Prevention: ' + self.prevention + ' \n Severity: ' + self.severity + ' \n Occurrence: ' + self.occurrence + ' \n Detection: ' + self.detection + ' '/]" sizeComputationExpression="4" labelPosition="node">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql: self.domain = process_modeling::EErrorDomain::GLOBAL and self.type = process_modeling::EErrorType::NAMED_ERROR">
              <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" borderLineStyle="dot" labelSize="14" showIcon="false" labelExpression="!" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Domain: ' + self.domain.toString().toLower().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' \n Status: ' + self.status.toString().toLower().toUpperFirst() + ' \n Message: ' + self.message + ' \n Description: ' + self.description + ' \n Mode: ' + self.mode + ' \n Effect: ' + self.effect + ' \n Cause: ' + self.cause + ' \n Prevention: ' + self.prevention + ' \n Severity: ' + self.severity + ' \n Occurrence: ' + self.occurrence + ' \n Detection: ' + self.detection + ' '/]" sizeComputationExpression="4" labelPosition="node">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql: self.domain = process_modeling::EErrorDomain::LOCAL and self.type = process_modeling::EErrorType::DEFAULT">
              <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" labelSize="14" showIcon="false" labelExpression="!" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Domain: ' + self.domain.toString().toLower().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' \n Status: ' + self.status.toString().toLower().toUpperFirst() + ' \n Message: ' + self.message + ' \n Description: ' + self.description + ' \n Mode: ' + self.mode + ' \n Effect: ' + self.effect + ' \n Cause: ' + self.cause + ' \n Prevention: ' + self.prevention + ' \n Severity: ' + self.severity + ' \n Occurrence: ' + self.occurrence + ' \n Detection: ' + self.detection + ' '/]" sizeComputationExpression="4" labelPosition="node">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql: self.domain = process_modeling::EErrorDomain::GLOBAL and self.type = process_modeling::EErrorType::DEFAULT">
              <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" borderLineStyle="dot" labelSize="14" showIcon="false" labelExpression="!" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Domain: ' + self.domain.toString().toLower().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' \n Status: ' + self.status.toString().toLower().toUpperFirst() + ' \n Message: ' + self.message + ' \n Description: ' + self.description + ' \n Mode: ' + self.mode + ' \n Effect: ' + self.effect + ' \n Cause: ' + self.cause + ' \n Prevention: ' + self.prevention + ' \n Severity: ' + self.severity + ' \n Occurrence: ' + self.occurrence + ' \n Detection: ' + self.detection + ' '/]" sizeComputationExpression="4" labelPosition="node">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </style>
            </conditionnalStyles>
          </borderedNodeMappings>
          <conditionnalStyles predicateExpression="aql:self.notation.toString()='OPERATION'">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" iconPath="/process_modelling_design/icons/process_step/notations/operation20x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.notation.toString()='INSPECTION'">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" iconPath="/process_modelling_design/icons/process_step/notations/inspection20x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.notation.toString()='TRANSPORTATION'">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" iconPath="/process_modelling_design/icons/process_step/notations/transportation30x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.notation.toString()='COMPOSITE'">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" iconPath="/process_modelling_design/icons/process_step/notations/composite77x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.notation.toString()='CONFIGURATION'">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" iconPath="/process_modelling_design/icons/process_step/notations/configuration20x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.notation.toString()='DELAY'">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" iconPath="/process_modelling_design/icons/process_step/notations/delay20x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.notation.toString()='NONE'">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" iconPath="/process_modelling_design/icons/process_step/notations/operation20x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </conditionnalStyles>
        </containerMappings>
        <containerMappings xsi:type="description_1:ContainerMappingImport" name="CapabilityImport" preconditionExpression="aql: self.eContainer().eContainer().eClass() = process_modeling::Process and self.eContainer().isErrorGroup = true" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::Capability" reusedNodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='Capability']/@subNodeMappings[name='Constraint'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='Capability']/@subNodeMappings[name='Parameter']" childrenPresentation="List" importedMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='Capability']"/>
        <containerMappings xsi:type="description_1:ContainerMappingImport" name="ProductImport" preconditionExpression="aql: self.eContainer().eContainer().eClass() = process_modeling::Process and self.eContainer().isErrorGroup = true" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::Product" reusedNodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='Product']/@subNodeMappings[name='Constraint']" childrenPresentation="List" importedMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='Product']"/>
        <containerMappings xsi:type="description_1:ContainerMappingImport" name="UnorderedStepsImport" semanticCandidatesExpression="aql: self.elements -> select(unordered | unordered.isErrorGroup=false)" domainClass="process_modeling::UnorderedSteps" reusedContainerMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='UnorderedSteps']/@subContainerMappings[name='UnorderedCapability'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='UnorderedSteps']/@subContainerMappings[name='UnorderedProduct'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='UnorderedSteps']/@subContainerMappings[name='UnorderedStep']" importedMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='UnorderedSteps']">
          <subContainerMappings xsi:type="description_1:ContainerMappingImport" name="UnorderedStepImport" semanticCandidatesExpression="aql: self.steps -> select(step | step.type.toString() = 'REGULAR' and step.isErrorGroup=false and step.eContainer().eClass() = process_modeling::UnorderedSteps)" importedMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='UnorderedSteps']/@subContainerMappings[name='UnorderedStep']">
            <borderedNodeMappings name="Bordered Unordered Error" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@toolSections.0/@ownedTools[name='Open%20global%20error%20handler']" domainClass="process_modeling::Error">
              <conditionnalStyles predicateExpression="aql: self.domain = process_modeling::EErrorDomain::LOCAL and self.type = process_modeling::EErrorType::NAMED_ERROR">
                <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" labelSize="14" showIcon="false" labelExpression="!" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Domain: ' + self.domain.toString().toLower().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' \n Status: ' + self.status.toString().toLower().toUpperFirst() + ' \n Message: ' + self.message + ' \n Description: ' + self.description + ' \n Mode: ' + self.mode + ' \n Effect: ' + self.effect + ' \n Cause: ' + self.cause + ' \n Prevention: ' + self.prevention + ' \n Severity: ' + self.severity + ' \n Occurrence: ' + self.occurrence + ' \n Detection: ' + self.detection + ' '/]" sizeComputationExpression="4" labelPosition="node">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                  <labelFormat>bold</labelFormat>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql: self.domain = process_modeling::EErrorDomain::GLOBAL and self.type = process_modeling::EErrorType::NAMED_ERROR">
                <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" borderLineStyle="dot" labelSize="14" showIcon="false" labelExpression="!" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Domain: ' + self.domain.toString().toLower().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' \n Status: ' + self.status.toString().toLower().toUpperFirst() + ' \n Message: ' + self.message + ' \n Description: ' + self.description + ' \n Mode: ' + self.mode + ' \n Effect: ' + self.effect + ' \n Cause: ' + self.cause + ' \n Prevention: ' + self.prevention + ' \n Severity: ' + self.severity + ' \n Occurrence: ' + self.occurrence + ' \n Detection: ' + self.detection + ' '/]" sizeComputationExpression="4" labelPosition="node">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                  <labelFormat>bold</labelFormat>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql: self.domain = process_modeling::EErrorDomain::LOCAL and self.type = process_modeling::EErrorType::DEFAULT">
                <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" labelSize="14" showIcon="false" labelExpression="!" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Domain: ' + self.domain.toString().toLower().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' \n Status: ' + self.status.toString().toLower().toUpperFirst() + ' \n Message: ' + self.message + ' \n Description: ' + self.description + ' \n Mode: ' + self.mode + ' \n Effect: ' + self.effect + ' \n Cause: ' + self.cause + ' \n Prevention: ' + self.prevention + ' \n Severity: ' + self.severity + ' \n Occurrence: ' + self.occurrence + ' \n Detection: ' + self.detection + ' '/]" sizeComputationExpression="4" labelPosition="node">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
                  <labelFormat>bold</labelFormat>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql: self.domain = process_modeling::EErrorDomain::GLOBAL and self.type = process_modeling::EErrorType::DEFAULT">
                <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" borderLineStyle="dot" labelSize="14" showIcon="false" labelExpression="!" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Domain: ' + self.domain.toString().toLower().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' \n Status: ' + self.status.toString().toLower().toUpperFirst() + ' \n Message: ' + self.message + ' \n Description: ' + self.description + ' \n Mode: ' + self.mode + ' \n Effect: ' + self.effect + ' \n Cause: ' + self.cause + ' \n Prevention: ' + self.prevention + ' \n Severity: ' + self.severity + ' \n Occurrence: ' + self.occurrence + ' \n Detection: ' + self.detection + ' '/]" sizeComputationExpression="4" labelPosition="node">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
                  <labelFormat>bold</labelFormat>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </style>
              </conditionnalStyles>
            </borderedNodeMappings>
          </subContainerMappings>
        </containerMappings>
        <containerMappings xsi:type="description_1:ContainerMappingImport" name="ErrorUnorderedSteps" semanticCandidatesExpression="aql: self.elements -> select(unordered | unordered.isErrorGroup=true)" domainClass="process_modeling::UnorderedSteps">
          <subContainerMappings xsi:type="description_1:ContainerMappingImport" name="ErrorUnorderedStep" semanticCandidatesExpression="aql: self.steps -> select(step | step.type.toString() = 'REGULAR' and step.isErrorGroup=true and step.eContainer().eClass() = process_modeling::UnorderedSteps)" importedMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']">
            <borderedNodeMappings name="Bordered Unordered ErrorOnErrorStep" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@toolSections.0/@ownedTools[name='Open%20global%20error%20handler']" domainClass="process_modeling::Error">
              <conditionnalStyles predicateExpression="aql: self.domain = process_modeling::EErrorDomain::LOCAL and self.type = process_modeling::EErrorType::NAMED_ERROR">
                <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" labelSize="14" showIcon="false" labelExpression="!" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Domain: ' + self.domain.toString().toLower().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' \n Status: ' + self.status.toString().toLower().toUpperFirst() + ' \n Message: ' + self.message + ' \n Description: ' + self.description + ' \n Mode: ' + self.mode + ' \n Effect: ' + self.effect + ' \n Cause: ' + self.cause + ' \n Prevention: ' + self.prevention + ' \n Severity: ' + self.severity + ' \n Occurrence: ' + self.occurrence + ' \n Detection: ' + self.detection + ' '/]" sizeComputationExpression="4" labelPosition="node">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                  <labelFormat>bold</labelFormat>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql: self.domain = process_modeling::EErrorDomain::GLOBAL and self.type = process_modeling::EErrorType::NAMED_ERROR">
                <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" borderLineStyle="dot" labelSize="14" showIcon="false" labelExpression="!" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Domain: ' + self.domain.toString().toLower().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' \n Status: ' + self.status.toString().toLower().toUpperFirst() + ' \n Message: ' + self.message + ' \n Description: ' + self.description + ' \n Mode: ' + self.mode + ' \n Effect: ' + self.effect + ' \n Cause: ' + self.cause + ' \n Prevention: ' + self.prevention + ' \n Severity: ' + self.severity + ' \n Occurrence: ' + self.occurrence + ' \n Detection: ' + self.detection + ' '/]" sizeComputationExpression="4" labelPosition="node">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                  <labelFormat>bold</labelFormat>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql: self.domain = process_modeling::EErrorDomain::LOCAL and self.type = process_modeling::EErrorType::DEFAULT">
                <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" labelSize="14" showIcon="false" labelExpression="!" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Domain: ' + self.domain.toString().toLower().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' \n Status: ' + self.status.toString().toLower().toUpperFirst() + ' \n Message: ' + self.message + ' \n Description: ' + self.description + ' \n Mode: ' + self.mode + ' \n Effect: ' + self.effect + ' \n Cause: ' + self.cause + ' \n Prevention: ' + self.prevention + ' \n Severity: ' + self.severity + ' \n Occurrence: ' + self.occurrence + ' \n Detection: ' + self.detection + ' '/]" sizeComputationExpression="4" labelPosition="node">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
                  <labelFormat>bold</labelFormat>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql: self.domain = process_modeling::EErrorDomain::GLOBAL and self.type = process_modeling::EErrorType::DEFAULT">
                <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" borderLineStyle="dot" labelSize="14" showIcon="false" labelExpression="!" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Domain: ' + self.domain.toString().toLower().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' \n Status: ' + self.status.toString().toLower().toUpperFirst() + ' \n Message: ' + self.message + ' \n Description: ' + self.description + ' \n Mode: ' + self.mode + ' \n Effect: ' + self.effect + ' \n Cause: ' + self.cause + ' \n Prevention: ' + self.prevention + ' \n Severity: ' + self.severity + ' \n Occurrence: ' + self.occurrence + ' \n Detection: ' + self.detection + ' '/]" sizeComputationExpression="4" labelPosition="node">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
                  <labelFormat>bold</labelFormat>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </style>
              </conditionnalStyles>
            </borderedNodeMappings>
          </subContainerMappings>
          <subContainerMappings xsi:type="description_1:ContainerMappingImport" name="UnorderedCapability" preconditionExpression="aql: self.eContainer().eContainer().eClass() = process_modeling::UnorderedSteps and self.eContainer().isErrorGroup = true" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::Capability" reusedNodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='Capability']/@subNodeMappings[name='Constraint'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='Capability']/@subNodeMappings[name='Parameter']" childrenPresentation="List" importedMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='UnorderedSteps']/@subContainerMappings[name='UnorderedCapability']"/>
          <subContainerMappings xsi:type="description_1:ContainerMappingImport" name="UnorderedProduct" preconditionExpression="aql: self.eContainer().eContainer().eClass() = process_modeling::UnorderedSteps and self.eContainer().isErrorGroup = true" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::Product" reusedNodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='Product']/@subNodeMappings[name='Constraint']" childrenPresentation="List" importedMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='UnorderedSteps']/@subContainerMappings[name='UnorderedProduct']"/>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="2" labelSize="9" iconPath="/process_modelling_design/icons/process_step/Unordered20x20.png" backgroundStyle="Liquid">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <toolSections name="Errors">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Local Error" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='RegularStepImport']/@borderedNodeMappings[name='Error'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@borderedNodeMappings[name='ErrorOnErrorStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='UnorderedStepsImport']/@subContainerMappings[name='UnorderedStepImport']/@borderedNodeMappings[name='Bordered%20Unordered%20Error'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorUnorderedSteps']/@subContainerMappings[name='ErrorUnorderedStep']/@borderedNodeMappings[name='Bordered%20Unordered%20ErrorOnErrorStep']" iconPath="/process_modelling_design/icons/process_step/error/LocalError32x32b.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Error" referenceName="errors">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="domain" valueExpression="LOCAL"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="NAMED_ERROR"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="status" valueExpression="INACTIVE"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Global Error" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='RegularStepImport']/@borderedNodeMappings[name='Error'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@borderedNodeMappings[name='ErrorOnErrorStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='UnorderedStepsImport']/@subContainerMappings[name='UnorderedStepImport']/@borderedNodeMappings[name='Bordered%20Unordered%20Error'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorUnorderedSteps']/@subContainerMappings[name='ErrorUnorderedStep']/@borderedNodeMappings[name='Bordered%20Unordered%20ErrorOnErrorStep']" iconPath="/process_modelling_design/icons/process_step/error/GlobalError32x32b.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Error" referenceName="errors">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="domain" valueExpression="GLOBAL"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="NAMED_ERROR"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="status" valueExpression="INACTIVE"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Local Default Error" precondition="aql: not(container.errors -> exists(err | err.type.toString() = 'DEFAULT'))" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='RegularStepImport']/@borderedNodeMappings[name='Error'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@borderedNodeMappings[name='ErrorOnErrorStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='UnorderedStepsImport']/@subContainerMappings[name='UnorderedStepImport']/@borderedNodeMappings[name='Bordered%20Unordered%20Error'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorUnorderedSteps']/@subContainerMappings[name='ErrorUnorderedStep']/@borderedNodeMappings[name='Bordered%20Unordered%20ErrorOnErrorStep']" iconPath="/process_modelling_design/icons/process_step/error/DefaultLocalError32x32a.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Error" referenceName="errors">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="domain" valueExpression="LOCAL"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="DEFAULT"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="status" valueExpression="INACTIVE"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="message" valueExpression="none"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="description" valueExpression="none"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="mode" valueExpression="unknown"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="effect" valueExpression="unknown"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="cause" valueExpression="unknown"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="prevention" valueExpression="unknown"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="severity" valueExpression="0"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="occurrence" valueExpression="0"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="detection" valueExpression="0"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="unknown"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Global Default Error" precondition="aql: not(container.errors -> exists(err | err.type.toString() = 'DEFAULT'))" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='RegularStepImport']/@borderedNodeMappings[name='Error'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@borderedNodeMappings[name='ErrorOnErrorStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='UnorderedStepsImport']/@subContainerMappings[name='UnorderedStepImport']/@borderedNodeMappings[name='Bordered%20Unordered%20Error'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorUnorderedSteps']/@subContainerMappings[name='ErrorUnorderedStep']/@borderedNodeMappings[name='Bordered%20Unordered%20ErrorOnErrorStep']" iconPath="/process_modelling_design/icons/process_step/error/DefaultGlobalError32x32a.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Error" referenceName="errors">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="domain" valueExpression="GLOBAL"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="DEFAULT"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="status" valueExpression="INACTIVE"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="message" valueExpression="none"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="description" valueExpression="none"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="mode" valueExpression="unknown"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="effect" valueExpression="unknown"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="cause" valueExpression="unknown"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="prevention" valueExpression="unknown"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="severity" valueExpression="0"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="occurrence" valueExpression="0"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="detection" valueExpression="0"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="unknown"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="Open global error handler" precondition="aql:self.domain = process_modeling::EErrorDomain::GLOBAL" forceRefresh="true" mappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='RegularStepImport']/@borderedNodeMappings[name='Error'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@borderedNodeMappings[name='ErrorOnErrorStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='UnorderedStepsImport']/@subContainerMappings[name='UnorderedStepImport']/@borderedNodeMappings[name='Bordered%20Unordered%20Error'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorUnorderedSteps']/@subContainerMappings[name='ErrorUnorderedStep']/@borderedNodeMappings[name='Bordered%20Unordered%20ErrorOnErrorStep']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.globalErrorHandler">
                <subModelOperations xsi:type="tool:Navigation" diagramDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Error Steps and Gates">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Regular" forceRefresh="true" elementsToSelect="aql: instance" containerMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']" iconPath="/process_modelling_design/icons/process_step/RegularStepErr32x32.png" extraMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorUnorderedSteps']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:Switch">
                  <cases conditionExpression="aql: container.eClass() = process_modeling::UnorderedSteps">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::ProcessStep" referenceName="steps">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="REGULAR"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="notation" valueExpression="OPERATION"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="true"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Capability" referenceName="capability">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </cases>
                  <default>
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::ProcessStep" referenceName="elements">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="REGULAR"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="notation" valueExpression="OPERATION"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="true"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Capability" referenceName="capability">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </default>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Unordered" forceRefresh="true" containerMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@containerMappings[name='UnorderedSteps']" iconPath="/process_modelling_design/icons/process_step/UnorderedStepsErr32x69.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::UnorderedSteps" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="true"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Decision" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='DecisionGate']" iconPath="/process_modelling_design/icons/gates/DecisionGateErr32x32.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Gate" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="DECISION"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="true"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="Decision"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Parallelism" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='ParallelismGate']" iconPath="/process_modelling_design/icons/gates/ParallelismGateErr32x32.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Gate" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="PARALLELISM"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="true"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="Parallelism"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Collaboration" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='CollaborationGate']" iconPath="/process_modelling_design/icons/gates/CollaborationGateErr32x32.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Gate" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="COLLABORATION"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="true"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="Collaboration"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Variation" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@defaultLayer/@nodeMappings[name='VariationGate']" iconPath="/process_modelling_design/icons/gates/VariationGateErr32x32a.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Gate" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="VARIATION"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="true"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="Variation"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Error" precondition="aql: preTarget.eContainer().eClass() != process_modeling::UnorderedSteps" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@edgeMappings[name='ErrorNode-StepRelationship'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@edgeMappings[name='ErrorRelataionship']" iconPath="/process_modelling_design/icons/relationships/RelationError32x32.png" connectionStartPrecondition="aql: preSource.eContainer().eClass() != process_modeling::UnorderedSteps">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Switch">
                <cases conditionExpression="aql:source.eClass() = process_modeling::Error">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="localErrorHandler" valueExpression="var:target"/>
                  </subModelOperations>
                </cases>
                <default>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.eContainer()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Relationship" referenceName="relationships">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="ERROR"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="source" valueExpression="[source/]"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="target" valueExpression="[target/]"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="[source.id + '_' + target.id + '_error_flow'/]"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="outRelationships" valueExpression="[Relationship.allInstances() -> select(rel : Relationship | rel.id = (source.id + '-' + target.id + '-flow'))/]"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:target">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="inRelationships" valueExpression="[Relationship.allInstances() -> select(rel : Relationship | rel.id = (source.id + '-' + target.id + '-flow'))/]"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </default>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="Delete Local Error Handler Link" forceRefresh="true">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Unset" featureName="localErrorHandler"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.status.toString()='ACTIVE'">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='RegularStepImport']/@borderedNodeMappings[name='Error']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='RegularStepImport']/@borderedNodeMappings[name='Error']/@conditionnalStyles.0/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='RegularStepImport']/@borderedNodeMappings[name='Error']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='RegularStepImport']/@borderedNodeMappings[name='Error']/@conditionnalStyles.2/@style" referenceName="color" value="//@userColorsPalettes[name='myColor']/@entries[name='Active_Error_Light_Red']"/>
          </vsmElementCustomizations>
        </customization>
      </additionalLayers>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="Matched Process" domainClass="process_modeling::Process">
      <defaultLayer name="Default">
        <nodeMappings name="StartStep" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="aql: self.elements -> select(step | step.type.toString() = 'START' and step.isErrorGroup=false and step.eContainer().eClass() = process_modeling::Process)" documentation="[ProcessStep.allInstances() -> select(step | step.type.toString() = 'START')/]" domainClass="process_modeling::ProcessStep">
          <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" borderLineStyle="dash" labelSize="9" showIcon="false" labelExpression="Start" sizeComputationExpression="5" labelPosition="node" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="EndStep" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="aql: self.elements -> select(step | step.type.toString() = 'END' and step.isErrorGroup=false and step.eContainer().eClass() = process_modeling::Process)" documentation="Nekada smo imali ovo u Semantic Candidate Expression:&#xD;&#xA;aql: self.elements -> select(step | step.type.toString() = 'END')&#xD;&#xA;&#xD;&#xA;[ProcessStep.allInstances() -> select(step | step.type.toString() = 'END')/]" domainClass="process_modeling::ProcessStep">
          <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" labelSize="9" showIcon="false" labelExpression="End" sizeComputationExpression="5" labelPosition="node" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="DecisionGate" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="aql: self.elements -> select(gate | gate.type.toString() = 'DECISION' and gate.isErrorGroup=false and gate.eContainer().eClass() = process_modeling::Process)" documentation="[Gate.allInstances() -> select(gate | gate.type.toString() = 'DECISION' and gate.isErrorGroup=false)/]" domainClass="process_modeling::Gate">
          <style xsi:type="style:LozengeNodeDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" labelExpression="DEC" sizeComputationExpression="5" labelPosition="node" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="ParallelismGate" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="aql: self.elements -> select(gate | gate.type.toString() = 'PARALLELISM' and gate.isErrorGroup=false and gate.eContainer().eClass() = process_modeling::Process)" documentation="Nekada smo imali ovo u Semantic Candidate Expression:&#xD;&#xA;aql: self.elements -> select(gate | gate.type.toString() = 'PARALLELISM')&#xD;&#xA;&#xD;&#xA;[Gate.allInstances() -> select(gate | gate.type.toString() = 'PARALLELISM' and gate.isErrorGroup=false)/]" domainClass="process_modeling::Gate">
          <style xsi:type="style:LozengeNodeDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" labelExpression="PAR" sizeComputationExpression="5" labelPosition="node" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="CollaborationGate" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="aql: self.elements -> select(gate | gate.type.toString() = 'COLLABORATION' and gate.isErrorGroup=false and gate.eContainer().eClass() = process_modeling::Process)" documentation="[Gate.allInstances() -> select(gate | gate.type.toString() = 'COLLABORATION' and gate.isErrorGroup=false)/]" domainClass="process_modeling::Gate">
          <style xsi:type="style:LozengeNodeDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" labelExpression="COL" sizeComputationExpression="5" labelPosition="node" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="VariationGate" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="aql: self.elements -> select(gate | gate.type.toString() = 'VARIATION' and gate.isErrorGroup=false and gate.eContainer().eClass() = process_modeling::Process)" domainClass="process_modeling::Gate">
          <style xsi:type="style:LozengeNodeDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" labelExpression="VAR" sizeComputationExpression="5" labelPosition="node" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="SubProcess" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::SubProcess">
          <borderedNodeMappings name="SubProcessParameter" semanticCandidatesExpression="aql: self.parameters -> select(parameter | parameter.eContainer().eClass() = process_modeling::SubProcess)" domainClass="process_modeling::ProcessParameter">
            <conditionnalStyles predicateExpression="aql: self.type = process_modeling::EProcessParameterType::INPUT_PRODUCT">
              <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="2" labelSize="9" showIcon="false" labelExpression="IN" sizeComputationExpression="4" labelPosition="node" color="//@userColorsPalettes[name='myColor']/@entries[name='Product_Light_Blue']">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql: self.type = process_modeling::EProcessParameterType::OUTPUT_PRODUCT">
              <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="2" labelSize="9" showIcon="false" labelExpression="OUT" sizeComputationExpression="4" labelPosition="node" color="//@userColorsPalettes[name='myColor']/@entries[name='Product_Blue']">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </conditionnalStyles>
          </borderedNodeMappings>
          <style xsi:type="style:SquareDescription" borderSizeComputationExpression="2" borderLineStyle="dash" labelSize="9" iconPath="/process_modelling_design/icons/process_step/subprocess20x20a.png" labelPosition="node" resizeKind="NSEW" width="15" height="7" color="//@userColorsPalettes[name='myColor']/@entries[name='Sub_Process_Light_Gray']">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="ProcessParameter" semanticCandidatesExpression="aql: self.parameters -> select(parameter | parameter.eContainer().eClass() = process_modeling::Process)" domainClass="process_modeling::ProcessParameter">
          <conditionnalStyles predicateExpression="aql: self.type = process_modeling::EProcessParameterType::INPUT_PRODUCT">
            <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="2" labelSize="9" showIcon="false" labelExpression="IN" sizeComputationExpression="4" labelPosition="node" color="//@userColorsPalettes[name='myColor']/@entries[name='Product_Light_Blue']">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: self.type = process_modeling::EProcessParameterType::OUTPUT_PRODUCT">
            <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="2" labelSize="9" showIcon="false" labelExpression="OUT" sizeComputationExpression="4" labelPosition="node" color="//@userColorsPalettes[name='myColor']/@entries[name='Product_Blue']">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
        </nodeMappings>
        <edgeMappings name="FlowRelataionship" semanticCandidatesExpression="[Relationship.allInstances() -> select(relationship | relationship.type.toString() = 'FLOW')/]" sourceMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='StartStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='DecisionGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='ParallelismGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='CollaborationGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='VariationGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='UnorderedSteps'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='SubProcess']" targetMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='EndStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='DecisionGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='ParallelismGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='CollaborationGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='VariationGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='UnorderedSteps'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='SubProcess']" targetFinderExpression="aql: self.eContainer().elements->select(element | element.id = self.target.id)" sourceFinderExpression="aql: self.eContainer().elements->select(element | element.id = self.source.id)" domainClass="process_modeling::Relationship" useDomainElement="true">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="9" showIcon="false" labelExpression="feature:logicalCondition">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="CollaborationRelationship" semanticCandidatesExpression="[Relationship.allInstances() -> select(relationship | relationship.type.toString() = 'COLLABORATION')/]" documentation="Ranije:&#xD;&#xA;aql: self.relations -> select(relation | relation.type.toString() = 'COLLABORATION')" sourceMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']" targetMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']" targetFinderExpression="aql: self.eContainer().elements ->select(element | element.id = self.target.id)" sourceFinderExpression="aql: self.eContainer().elements->select(element | element.id = self.source.id)" domainClass="process_modeling::Relationship" useDomainElement="true">
          <style lineStyle="dash_dot" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="9" showIcon="false" labelExpression="feature:message">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="MaterialRelationship" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@toolSections.3/@ownedTools[name='Delete%20Product%20Equivalent%20Link']" sourceMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='Product'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='RegularStepImport'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']" targetMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='Product']" targetFinderExpression="aql: self.equivalent">
          <style lineStyle="dash" targetArrow="InputClosedArrow" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="9" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ContainmentRelationship" sourceMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']" targetMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='Product']" targetFinderExpression="aql: self.inProducts->union(self.outProducts)">
          <style targetArrow="NoDecoration" sizeComputationExpression="2" foldingStyle="SOURCE">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="9" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ContainmentRelationship2" sourceMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']" targetMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='Capability']" targetFinderExpression="aql: self.capability">
          <style targetArrow="NoDecoration" sizeComputationExpression="2" foldingStyle="SOURCE">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="9" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="UnorderedContainmentRelationship" sourceMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='UnorderedSteps']" targetMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='UnorderedSteps']/@subContainerMappings[name='UnorderedStep']" targetFinderExpression="aql: self.steps">
          <style targetArrow="NoDecoration" sizeComputationExpression="0" foldingStyle="SOURCE">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <centerLabelStyleDescription labelSize="9" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ParameterRelationship" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@toolSections.2/@ownedTools[name='Delete%20Parameter%20Link']" sourceMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='ProcessParameter'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='SubProcess']/@borderedNodeMappings[name='SubProcessParameter']" targetMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='Product']" targetFinderExpression="aql: self.product">
          <conditionnalStyles predicateExpression="aql: self.eContainer().eClass() = process_modeling::Process">
            <style lineStyle="dash" targetArrow="InputFillClosedArrow" sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <centerLabelStyleDescription labelSize="9" showIcon="false">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: self.eContainer().eClass() = process_modeling::SubProcess">
            <style lineStyle="dash" sourceArrow="InputFillClosedArrow" targetArrow="NoDecoration" sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <centerLabelStyleDescription labelSize="9" showIcon="false">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="ParameterRelationship2" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@toolSections.2/@ownedTools[name='Delete%20Parameter%20Link']" sourceMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='ProcessParameter'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='SubProcess']/@borderedNodeMappings[name='SubProcessParameter']" targetMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='ProcessParameter'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='SubProcess']/@borderedNodeMappings[name='SubProcessParameter']" targetFinderExpression="aql: self.parameter">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="12">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="RegularStep" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="aql: self.elements -> select(step | step.type.toString() = 'REGULAR' and step.isErrorGroup=false and step.eContainer().eClass() = process_modeling::Process)" domainClass="process_modeling::ProcessStep">
          <borderedNodeMappings name="Resource" semanticCandidatesExpression="[self.resource -> select(resource | resource.isActuator = true)/]" domainClass="process_modeling::Resource">
            <conditionnalStyles predicateExpression="aql:self.type.toString()='HUMAN'">
              <style xsi:type="style:SquareDescription" borderSizeComputationExpression="1" labelSize="9" labelExpression="" iconPath="/process_modelling_design/icons/process_step/resources/human32x32.png" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Is actuator: ' + self.isActuator.toString().toUpperFirst() + ' \n Is storage: ' + self.isStorage.toString().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' '/]" labelPosition="node" resizeKind="NSEW" width="5" height="5">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <forbiddenSides>WEST</forbiddenSides>
                <forbiddenSides>SOUTH</forbiddenSides>
                <forbiddenSides>NORTH</forbiddenSides>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_yellow']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.type.toString()='MACHINE'">
              <style xsi:type="style:SquareDescription" borderSizeComputationExpression="1" labelSize="9" labelExpression="" iconPath="/process_modelling_design/icons/process_step/resources/machine32x32a.png" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Is actuator: ' + self.isActuator.toString().toUpperFirst() + ' \n Is storage: ' + self.isStorage.toString().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' '/]" labelPosition="node" resizeKind="NSEW" width="5" height="5">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <forbiddenSides>WEST</forbiddenSides>
                <forbiddenSides>SOUTH</forbiddenSides>
                <forbiddenSides>NORTH</forbiddenSides>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_yellow']"/>
              </style>
            </conditionnalStyles>
          </borderedNodeMappings>
          <conditionnalStyles predicateExpression="aql:self.notation.toString()='OPERATION'">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" iconPath="/process_modelling_design/icons/process_step/notations/operation20x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.notation.toString()='INSPECTION'">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" iconPath="/process_modelling_design/icons/process_step/notations/inspection20x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.notation.toString()='TRANSPORTATION'">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" iconPath="/process_modelling_design/icons/process_step/notations/transportation30x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.notation.toString()='COMPOSITE'">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" iconPath="/process_modelling_design/icons/process_step/notations/composite77x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.notation.toString()='CONFIGURATION'">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" iconPath="/process_modelling_design/icons/process_step/notations/configuration20x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.notation.toString()='DELAY'">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" iconPath="/process_modelling_design/icons/process_step/notations/delay20x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.notation.toString()='NONE'">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" iconPath="/process_modelling_design/icons/process_step/notations/operation20x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </conditionnalStyles>
        </containerMappings>
        <containerMappings name="Product" preconditionExpression="aql: self.eContainer().eContainer().eClass() = process_modeling::Process and self.eContainer().isErrorGroup = false" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::Product" childrenPresentation="List">
          <borderedNodeMappings name="Storage" semanticCandidatesExpression="[self.storage -> select(resource | resource.isStorage = true)/]" domainClass="process_modeling::Resource">
            <style xsi:type="style:SquareDescription" borderSizeComputationExpression="1" labelSize="9" labelExpression="" iconPath="/process_modelling_design/icons/process_step/resources/storage40x32.png" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Is actuator: ' + self.isActuator.toString().toUpperFirst() + ' \n Is storage: ' + self.isStorage.toString().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' '/]" labelPosition="node" resizeKind="NSEW" width="5" height="5">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_yellow']"/>
            </style>
          </borderedNodeMappings>
          <subNodeMappings name="Constraint" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::Constraint">
            <style xsi:type="style:SquareDescription" labelSize="9" showIcon="false" labelExpression="aql: self.physicalDimension + ' ' + self.relationalOperator + ' ' + self.value + ' ' + self.metricUnit" iconPath="/process_modelling_design/icons/process_step/products_and_capability/constraint16x16.png" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <conditionnalStyles predicateExpression="aql: self.eContainer().inProducts -> exists(product | product = self and self.isStored = true)">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" labelExpression="aql: 'IN: ' + self.name" iconPath="/process_modelling_design/icons/process_step/resources/storage25x20c.png" roundedCorner="true" widthComputationExpression="12" heightComputationExpression="7" backgroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Light_Blue']" foregroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Light_Blue']">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: self.eContainer().outProducts -> exists(product | product = self and self.isStored = true)">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" labelExpression="aql: 'OUT: ' + self.name" iconPath="/process_modelling_design/icons/process_step/resources/storage25x20c.png" roundedCorner="true" widthComputationExpression="12" heightComputationExpression="7" backgroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Blue']" foregroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Blue']">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: self.eContainer().inProducts -> exists(product | product = self and self.isStored = false)">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" labelExpression="aql: 'IN: ' + self.name" roundedCorner="true" widthComputationExpression="12" heightComputationExpression="7" backgroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Light_Blue']" foregroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Light_Blue']">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: self.eContainer().outProducts -> exists(product | product = self and self.isStored = false)">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" labelExpression="aql: 'OUT: ' + self.name" roundedCorner="true" widthComputationExpression="12" heightComputationExpression="7" backgroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Blue']" foregroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Blue']">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
            </style>
          </conditionnalStyles>
        </containerMappings>
        <containerMappings name="Capability" preconditionExpression="aql: self.eContainer().eContainer().eClass() = process_modeling::Process and self.eContainer().isErrorGroup = false" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::Capability" childrenPresentation="List">
          <subNodeMappings name="Constraint" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::Constraint">
            <style xsi:type="style:SquareDescription" labelSize="9" showIcon="false" labelExpression="aql: self.physicalDimension + ' ' + self.relationalOperator + ' ' + self.value + ' ' + self.metricUnit" iconPath="/process_modelling_design/icons/process_step/products_and_capability/constraint16x16.png" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="Parameter" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::Parameter">
            <style xsi:type="style:SquareDescription" labelSize="9" showIcon="false" labelExpression="aql: self.key + ' : ' + self.value" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" roundedCorner="true" widthComputationExpression="12" heightComputationExpression="7">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
          </style>
        </containerMappings>
        <containerMappings name="UnorderedSteps" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="aql: self.elements -> select(unordered | unordered.isErrorGroup=false)" domainClass="process_modeling::UnorderedSteps">
          <subContainerMappings xsi:type="description_1:ContainerMappingImport" name="UnorderedStep" semanticCandidatesExpression="aql: self.steps -> select(step | step.type.toString() = 'REGULAR' and step.isErrorGroup=false and step.eContainer().eClass() = process_modeling::UnorderedSteps)" domainClass="process_modeling::ProcessStep" reusedBorderedNodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@borderedNodeMappings[name='Resource']" importedMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']"/>
          <subContainerMappings xsi:type="description_1:ContainerMappingImport" name="UnorderedCapability" preconditionExpression="aql: self.eContainer().eContainer().eClass() = process_modeling::UnorderedSteps and self.eContainer().isErrorGroup = false" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::Capability" reusedNodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='Capability']/@subNodeMappings[name='Parameter'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='Capability']/@subNodeMappings[name='Constraint']" childrenPresentation="List" importedMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='Capability']"/>
          <subContainerMappings xsi:type="description_1:ContainerMappingImport" name="UnorderedProduct" preconditionExpression="aql: self.eContainer().eContainer().eClass() = process_modeling::UnorderedSteps and self.eContainer().isErrorGroup = false" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::Product" reusedBorderedNodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='Product']/@borderedNodeMappings[name='Storage']" reusedNodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='Product']/@subNodeMappings[name='Constraint']" childrenPresentation="List" importedMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='Product']"/>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="2" labelSize="9" iconPath="/process_modelling_design/icons/process_step/Unordered20x20.png" backgroundStyle="Liquid">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <toolSections name="Steps">
          <ownedTools xsi:type="tool:NodeCreationDescription" documentation="[ProcessStep.allInstances() -> forAll(ps : ProcessStep | ps.type.toString() = 'END' or ps.type.toString() = 'REGULAR')/]" name="Start" precondition="[ProcessStep.allInstances() -> forAll(ps : ProcessStep | ps.type.toString() = 'END' or ps.type.toString() = 'REGULAR')/]" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='StartStep']" iconPath="/process_modelling_design/icons/process_step/StartStep32x32.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::ProcessStep" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="START"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="false"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="Start"/>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="startStep" valueExpression="var:instance"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" documentation="[ProcessStep.allInstances() -> forAll(ps : ProcessStep | not (ps.type.toString() = 'END'))/]" name="End" precondition="[not(ProcessStep.allInstances() -> exists(ps : ProcessStep | ps.type.toString() = 'END'))/]" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='EndStep']" iconPath="/process_modelling_design/icons/process_step/EndStep32x32.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::ProcessStep" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="END"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="false"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="End"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Regular" forceRefresh="true" elementsToSelect="aql: instance" containerMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']" iconPath="/process_modelling_design/icons/process_step/RegularStep32x32a.png" extraMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='UnorderedSteps']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:Switch">
                  <cases conditionExpression="aql: container.eClass() = process_modeling::UnorderedSteps">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::ProcessStep" referenceName="steps">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="REGULAR"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="notation" valueExpression="OPERATION"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="false"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Capability" referenceName="capability">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </cases>
                  <default>
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::ProcessStep" referenceName="elements">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="REGULAR"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="notation" valueExpression="OPERATION"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="false"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Capability" referenceName="capability">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </default>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Unordered" forceRefresh="true" containerMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='UnorderedSteps']" iconPath="/process_modelling_design/icons/process_step/UnorderedSteps32x69a.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::UnorderedSteps" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="false"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="Delete Relationships when Deleting Elements" forceRefresh="true">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Switch">
                <cases conditionExpression="aql:element.inRelationships -> union(element.outRelationships) -> size() > 0">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:element.inRelationships -> union(element.outRelationships)">
                    <subModelOperations xsi:type="tool_1:RemoveElement">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                        <subModelOperations xsi:type="tool_1:RemoveElement"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </cases>
                <cases conditionExpression="aql:element.inRelationships -> union(element.outRelationships) -> size() = 0">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                    <subModelOperations xsi:type="tool_1:RemoveElement"/>
                  </subModelOperations>
                </cases>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Gates">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Decision" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='DecisionGate']" iconPath="/process_modelling_design/icons/gates/DecisionGate32x32.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Gate" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="DECISION"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="false"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="Decision"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Parallelism" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='ParallelismGate']" iconPath="/process_modelling_design/icons/gates/ParallelismGate32x32.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Gate" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="PARALLELISM"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="false"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="Parallelism"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Collaboration" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='CollaborationGate']" iconPath="/process_modelling_design/icons/gates/CollaborationGate32x32.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Gate" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="COLLABORATION"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="false"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="Collaboration"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Variation" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='VariationGate']" iconPath="/process_modelling_design/icons/gates/VariationGate32x32a.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Gate" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="VARIATION"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="false"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="Variation"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Sub-Processes">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Sub-Process" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='SubProcess']" iconPath="/process_modelling_design/icons/process_step/SubProcess32x69.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::SubProcess" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="false"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Input Parameter" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='SubProcess']/@borderedNodeMappings[name='SubProcessParameter'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='ProcessParameter']" iconPath="/process_modelling_design/icons/parameters/inparameter32x32.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::ProcessParameter" referenceName="parameters">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="INPUT_PRODUCT"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Output Parameter" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='SubProcess']/@borderedNodeMappings[name='SubProcessParameter'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='ProcessParameter']" iconPath="/process_modelling_design/icons/parameters/outparameter32x32.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::ProcessParameter" referenceName="parameters">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="OUTPUT_PRODUCT"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="Delete Parameter Link" forceRefresh="true">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Unset" featureName="product"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Capability and Product">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Capability" precondition="[container.oclIsTypeOf(ProcessStep)/]" forceRefresh="true" containerMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='Capability']" iconPath="/process_modelling_design/icons/process_step/products_and_capability/capability55x32.png" extraMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Capability" referenceName="capability">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Input Product" precondition="[container.oclIsTypeOf(ProcessStep)/]" forceRefresh="true" containerMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='Product']" iconPath="/process_modelling_design/icons/process_step/products_and_capability/inProduct55x32.png" extraMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Product" referenceName="inProducts">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="quantity" valueExpression="1"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Output Product" precondition="[container.oclIsTypeOf(ProcessStep)/]" forceRefresh="true" containerMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='Product']" iconPath="/process_modelling_design/icons/process_step/products_and_capability/outProduct55x32.png" extraMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Product" referenceName="outProducts">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="quantity" valueExpression="1"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Constraint" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='Capability']/@subNodeMappings[name='Constraint'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='Product']/@subNodeMappings[name='Constraint']" iconPath="/process_modelling_design/icons/process_step/products_and_capability/constraint55x34.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Constraint" referenceName="constraints"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Parameter" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='Capability']/@subNodeMappings[name='Parameter']" iconPath="/process_modelling_design/icons/process_step/products_and_capability/parameter55x32.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Parameter" referenceName="parameters"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="Delete Product Equivalent Link" forceRefresh="true">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Unset" featureName="equivalent"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Resources">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Human Worker" precondition="aql: not(container.resource != null))" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@borderedNodeMappings[name='Resource']" iconPath="/process_modelling_design/icons/process_step/resources/human32x32.png" extraMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Resource" referenceName="resource">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isActuator" valueExpression="true"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isStorage" valueExpression="false"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="HUMAN"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Machine" precondition="aql: not(container.resource != null))" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@borderedNodeMappings[name='Resource']" iconPath="/process_modelling_design/icons/process_step/resources/machine32x32a.png" extraMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Resource" referenceName="resource">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isActuator" valueExpression="true"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isStorage" valueExpression="false"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="MACHINE"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Storage" precondition="aql: not(container.storage != null))" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='Product']/@borderedNodeMappings[name='Storage']" iconPath="/process_modelling_design/icons/process_step/resources/storage40x32.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Resource" referenceName="storage">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isActuator" valueExpression="false"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isStorage" valueExpression="true"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="MACHINE"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Relations">
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Flow" precondition="aql: preTarget.eContainer().eClass() != process_modeling::UnorderedSteps" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@edgeMappings[name='FlowRelataionship']" iconPath="/process_modelling_design/icons/relationships/RelationFlow32x32.png" connectionStartPrecondition="aql: preSource.eContainer().eClass() != process_modeling::UnorderedSteps">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.eContainer()">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Relationship" referenceName="relationships">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="FLOW"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="source" valueExpression="[source/]"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="target" valueExpression="[target/]"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="[source.id + '_' + target.id + '_flow'/]"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="outRelationships" valueExpression="[Relationship.allInstances() -> select(rel : Relationship | rel.id = (source.id + '-' + target.id + '-flow'))/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:target">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="inRelationships" valueExpression="[Relationship.allInstances() -> select(rel : Relationship | rel.id = (source.id + '-' + target.id + '-flow'))/]"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Collaboration" precondition="aql: preTarget.eContainer().eClass() != process_modeling::UnorderedSteps" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@edgeMappings[name='CollaborationRelationship']" iconPath="/process_modelling_design/icons/relationships/RelationCollaboration32x32a.png" connectionStartPrecondition="aql: preSource.eContainer().eClass() != process_modeling::UnorderedSteps">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.eContainer()">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Relationship" referenceName="relationships">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="COLLABORATION"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="source" valueExpression="[source/]"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="target" valueExpression="[target/]"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="[source.id + '_' + target.id + '_collaboration'/]"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ourRelationships" valueExpression="[Relationship.allInstances() -> select(rel : Relationship | rel.id = (source.id + '-' + target.id + '-collaboration'))/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:target">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="inRelationships" valueExpression="[Relationship.allInstances() -> select(rel : Relationship | rel.id = (source.id + '-' + target.id + '-collaboration'))/]"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Product Equivalent" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@edgeMappings[name='MaterialRelationship']" iconPath="/process_modelling_design/icons/relationships/RelationshipEquivalent32x32.png">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Switch">
                <cases conditionExpression="aql: source.eClass() = process_modeling::ProcessStep">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: source">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Product" referenceName="inProducts" variableName="inProd">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="equivalent" valueExpression="var:target"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:target.name"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="isStored" valueExpression="false"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="quantity" valueExpression="aql:target.quantity"/>
                      <subModelOperations xsi:type="tool_1:For" expression="aql:target.constraints">
                        <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:inProd">
                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Constraint" referenceName="constraints">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="physicalDimension" valueExpression="aql:i.physicalDimension"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="relationalOperator" valueExpression="aql:i.relationalOperator"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:i.value"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="metricUnit" valueExpression="aql:i.metricUnit"/>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </cases>
                <default>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="equivalent" valueExpression="var:target"/>
                  </subModelOperations>
                </default>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Parameter Link" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@edgeMappings[name='ParameterRelationship'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@edgeMappings[name='ParameterRelationship2']" iconPath="/process_modelling_design/icons/relationships/RelationshipParameter32x32.png">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: source">
                <subModelOperations xsi:type="tool_1:Switch">
                  <cases conditionExpression="aql: target.eClass() = process_modeling::Product">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="product" valueExpression="aql:target"/>
                  </cases>
                  <default>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="parameter" valueExpression="aql:target"/>
                  </default>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.status.toString()='ACTIVE'">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.6/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.0/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.2/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.6/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.0/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.2/@style" referenceName="backgroundColor" value="//@userColorsPalettes[name='myColor']/@entries[name='PS_Active_Light_Blue']"/>
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.6/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.0/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.2/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.6/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.0/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.2/@style" referenceName="foregroundColor" value="//@userColorsPalettes[name='myColor']/@entries[name='PS_Active_Light_Blue']"/>
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='EndStep']/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='StartStep']/@style" referenceName="color" value="//@userColorsPalettes[name='myColor']/@entries[name='PS_Active_Light_Blue']"/>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.status.toString()='ERROR'">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.6/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.0/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.2/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.6/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.0/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.2/@style" referenceName="backgroundColor" value="//@userColorsPalettes[name='myColor']/@entries[name='PS_Error_Light_Red']"/>
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.6/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.0/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.2/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.6/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.0/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.2/@style" referenceName="foregroundColor" value="//@userColorsPalettes[name='myColor']/@entries[name='PS_Error_Light_Red']"/>
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='EndStep']/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='StartStep']/@style" referenceName="color" value="//@userColorsPalettes[name='myColor']/@entries[name='PS_Error_Light_Red']"/>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.status.toString()='NONE'">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.6/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.0/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.2/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.6/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.0/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.2/@style" referenceName="backgroundColor">
              <value href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </featureCustomizations>
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.6/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.0/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.2/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.6/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.0/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.2/@style" referenceName="foregroundColor">
              <value href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </featureCustomizations>
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='EndStep']/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='StartStep']/@style" referenceName="color">
              <value href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </featureCustomizations>
          </vsmElementCustomizations>
        </customization>
      </defaultLayer>
      <additionalLayers name="ErrorHandling">
        <nodeMappings name="ErrorDecisionGate" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="[Gate.allInstances() -> select(gate | gate.type.toString() = 'DECISION' and gate.isErrorGroup=true)/]" domainClass="process_modeling::Gate">
          <style xsi:type="style:LozengeNodeDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" labelExpression="DEC" sizeComputationExpression="5" labelPosition="node" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="ErrorParallelismGate" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="[Gate.allInstances() -> select(gate | gate.type.toString() = 'PARALLELISM' and gate.isErrorGroup=true)/]" documentation="Nekada smo imali ovo u Semantic Candidate Expression:&#xD;&#xA;aql: self.elements -> select(gate | gate.type.toString() = 'PARALLELISM')" domainClass="process_modeling::Gate">
          <style xsi:type="style:LozengeNodeDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" labelExpression="PAR" sizeComputationExpression="5" labelPosition="node" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="ErrorCollaborationGate" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="[Gate.allInstances() -> select(gate | gate.type.toString() = 'COLLABORATION' and gate.isErrorGroup=true)/]" domainClass="process_modeling::Gate">
          <style xsi:type="style:LozengeNodeDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" labelExpression="COL" sizeComputationExpression="5" labelPosition="node" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="ErrorVariationGate" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="[Gate.allInstances() -> select(gate | gate.type.toString() = 'VARIATION' and gate.isErrorGroup=true)/]" domainClass="process_modeling::Gate">
          <style xsi:type="style:LozengeNodeDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" labelExpression="VAR" sizeComputationExpression="5" labelPosition="node" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
          </style>
        </nodeMappings>
        <edgeMappings name="ContainmentRelationshipError1" sourceMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']" targetMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='Product']" targetFinderExpression="aql: self.inProducts->union(self.outProducts)">
          <style targetArrow="NoDecoration" sizeComputationExpression="2" foldingStyle="SOURCE">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="9" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ContainmentRelationshipError2" sourceMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']" targetMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='Capability']" targetFinderExpression="aql: self.capability">
          <style targetArrow="NoDecoration" sizeComputationExpression="2" foldingStyle="SOURCE">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="9" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ErrorNode-StepRelationship" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@toolSections.1/@ownedTools[name='Delete%20Local%20Error%20Handler%20Link']" sourceMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='RegularStepImport']/@borderedNodeMappings[name='Error'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@borderedNodeMappings[name='ErrorOnErrorStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorUnorderedSteps']/@subContainerMappings[name='ErrorUnorderedStep']/@borderedNodeMappings[name='Bordered%20Unordered%20ErrorOnErrorStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='UnorderedStepsImport']/@subContainerMappings[name='UnorderedStepImport']/@borderedNodeMappings[name='Bordered%20Unordered%20Error']" targetMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@nodeMappings[name='ErrorCollaborationGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@nodeMappings[name='ErrorDecisionGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@nodeMappings[name='ErrorParallelismGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@nodeMappings[name='ErrorVariationGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorUnorderedSteps']" targetFinderExpression="aql: self.localErrorHandler">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            <centerLabelStyleDescription labelSize="9" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ErrorRelataionship" semanticCandidatesExpression="[Relationship.allInstances() -> select(relationship | relationship.type.toString() = 'ERROR')/]" sourceMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@nodeMappings[name='ErrorCollaborationGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@nodeMappings[name='ErrorDecisionGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@nodeMappings[name='ErrorParallelismGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@nodeMappings[name='ErrorVariationGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorUnorderedSteps']" targetMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@nodeMappings[name='ErrorCollaborationGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@nodeMappings[name='ErrorDecisionGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@nodeMappings[name='ErrorParallelismGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@nodeMappings[name='ErrorVariationGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='EndStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorUnorderedSteps'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='UnorderedSteps'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='ParallelismGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='DecisionGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='VariationGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='CollaborationGate']" targetFinderExpression="aql: self.eContainer().elements->select(element | element.id = self.target.id)" sourceFinderExpression="aql: self.eContainer().elements->select(element | element.id = self.source.id)" domainClass="process_modeling::Relationship" useDomainElement="true">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            <centerLabelStyleDescription labelSize="9" showIcon="false" labelExpression="feature:logicalCondition">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ErrorUnorderedContainmentRelationship" sourceMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorUnorderedSteps']" targetMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorUnorderedSteps']/@subContainerMappings[name='ErrorUnorderedStep']" targetFinderExpression="aql: self.steps">
          <style targetArrow="NoDecoration" sizeComputationExpression="0" foldingStyle="SOURCE">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <centerLabelStyleDescription labelSize="9" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings xsi:type="description_1:ContainerMappingImport" name="RegularStepImport" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="aql: self.elements -> select(step | step.type.toString() = 'REGULAR' and step.isErrorGroup=false and step.eContainer().eClass() = process_modeling::Process)" domainClass="process_modeling::ProcessStep" reusedBorderedNodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@borderedNodeMappings[name='Resource']" importedMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']">
          <borderedNodeMappings name="Error" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@toolSections.0/@ownedTools[name='Open%20global%20error%20handler']" domainClass="process_modeling::Error">
            <conditionnalStyles predicateExpression="aql: self.domain = process_modeling::EErrorDomain::LOCAL and self.type = process_modeling::EErrorType::NAMED_ERROR">
              <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" labelSize="14" showIcon="false" labelExpression="!" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Domain: ' + self.domain.toString().toLower().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' \n Status: ' + self.status.toString().toLower().toUpperFirst() + ' \n Message: ' + self.message + ' \n Description: ' + self.description + ' \n Mode: ' + self.mode + ' \n Effect: ' + self.effect + ' \n Cause: ' + self.cause + ' \n Prevention: ' + self.prevention + ' \n Severity: ' + self.severity + ' \n Occurrence: ' + self.occurrence + ' \n Detection: ' + self.detection + ' '/]" sizeComputationExpression="4" labelPosition="node">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql: self.domain = process_modeling::EErrorDomain::GLOBAL and self.type = process_modeling::EErrorType::NAMED_ERROR">
              <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" borderLineStyle="dot" labelSize="14" showIcon="false" labelExpression="!" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Domain: ' + self.domain.toString().toLower().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' \n Status: ' + self.status.toString().toLower().toUpperFirst() + ' \n Message: ' + self.message + ' \n Description: ' + self.description + ' \n Mode: ' + self.mode + ' \n Effect: ' + self.effect + ' \n Cause: ' + self.cause + ' \n Prevention: ' + self.prevention + ' \n Severity: ' + self.severity + ' \n Occurrence: ' + self.occurrence + ' \n Detection: ' + self.detection + ' '/]" sizeComputationExpression="4" labelPosition="node">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql: self.domain = process_modeling::EErrorDomain::LOCAL and self.type = process_modeling::EErrorType::DEFAULT">
              <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" labelSize="14" showIcon="false" labelExpression="!" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Domain: ' + self.domain.toString().toLower().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' \n Status: ' + self.status.toString().toLower().toUpperFirst() + ' \n Message: ' + self.message + ' \n Description: ' + self.description + ' \n Mode: ' + self.mode + ' \n Effect: ' + self.effect + ' \n Cause: ' + self.cause + ' \n Prevention: ' + self.prevention + ' \n Severity: ' + self.severity + ' \n Occurrence: ' + self.occurrence + ' \n Detection: ' + self.detection + ' '/]" sizeComputationExpression="4" labelPosition="node">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql: self.domain = process_modeling::EErrorDomain::GLOBAL and self.type = process_modeling::EErrorType::DEFAULT">
              <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" borderLineStyle="dot" labelSize="14" showIcon="false" labelExpression="!" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Domain: ' + self.domain.toString().toLower().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' \n Status: ' + self.status.toString().toLower().toUpperFirst() + ' \n Message: ' + self.message + ' \n Description: ' + self.description + ' \n Mode: ' + self.mode + ' \n Effect: ' + self.effect + ' \n Cause: ' + self.cause + ' \n Prevention: ' + self.prevention + ' \n Severity: ' + self.severity + ' \n Occurrence: ' + self.occurrence + ' \n Detection: ' + self.detection + ' '/]" sizeComputationExpression="4" labelPosition="node">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </style>
            </conditionnalStyles>
          </borderedNodeMappings>
        </containerMappings>
        <containerMappings name="ErrorStep" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="aql: self.elements -> select(step | step.type.toString() = 'REGULAR' and step.isErrorGroup=true and step.eContainer().eClass() = process_modeling::Process)" domainClass="process_modeling::ProcessStep">
          <borderedNodeMappings name="ErrorOnErrorStep" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@toolSections.0/@ownedTools[name='Open%20global%20error%20handler']" domainClass="process_modeling::Error">
            <conditionnalStyles predicateExpression="aql: self.domain = process_modeling::EErrorDomain::LOCAL and self.type = process_modeling::EErrorType::NAMED_ERROR">
              <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" labelSize="14" showIcon="false" labelExpression="!" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Domain: ' + self.domain.toString().toLower().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' \n Status: ' + self.status.toString().toLower().toUpperFirst() + ' \n Message: ' + self.message + ' \n Description: ' + self.description + ' \n Mode: ' + self.mode + ' \n Effect: ' + self.effect + ' \n Cause: ' + self.cause + ' \n Prevention: ' + self.prevention + ' \n Severity: ' + self.severity + ' \n Occurrence: ' + self.occurrence + ' \n Detection: ' + self.detection + ' '/]" sizeComputationExpression="4" labelPosition="node">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql: self.domain = process_modeling::EErrorDomain::GLOBAL and self.type = process_modeling::EErrorType::NAMED_ERROR">
              <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" borderLineStyle="dot" labelSize="14" showIcon="false" labelExpression="!" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Domain: ' + self.domain.toString().toLower().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' \n Status: ' + self.status.toString().toLower().toUpperFirst() + ' \n Message: ' + self.message + ' \n Description: ' + self.description + ' \n Mode: ' + self.mode + ' \n Effect: ' + self.effect + ' \n Cause: ' + self.cause + ' \n Prevention: ' + self.prevention + ' \n Severity: ' + self.severity + ' \n Occurrence: ' + self.occurrence + ' \n Detection: ' + self.detection + ' '/]" sizeComputationExpression="4" labelPosition="node">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql: self.domain = process_modeling::EErrorDomain::LOCAL and self.type = process_modeling::EErrorType::DEFAULT">
              <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" labelSize="14" showIcon="false" labelExpression="!" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Domain: ' + self.domain.toString().toLower().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' \n Status: ' + self.status.toString().toLower().toUpperFirst() + ' \n Message: ' + self.message + ' \n Description: ' + self.description + ' \n Mode: ' + self.mode + ' \n Effect: ' + self.effect + ' \n Cause: ' + self.cause + ' \n Prevention: ' + self.prevention + ' \n Severity: ' + self.severity + ' \n Occurrence: ' + self.occurrence + ' \n Detection: ' + self.detection + ' '/]" sizeComputationExpression="4" labelPosition="node">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql: self.domain = process_modeling::EErrorDomain::GLOBAL and self.type = process_modeling::EErrorType::DEFAULT">
              <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" borderLineStyle="dot" labelSize="14" showIcon="false" labelExpression="!" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Domain: ' + self.domain.toString().toLower().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' \n Status: ' + self.status.toString().toLower().toUpperFirst() + ' \n Message: ' + self.message + ' \n Description: ' + self.description + ' \n Mode: ' + self.mode + ' \n Effect: ' + self.effect + ' \n Cause: ' + self.cause + ' \n Prevention: ' + self.prevention + ' \n Severity: ' + self.severity + ' \n Occurrence: ' + self.occurrence + ' \n Detection: ' + self.detection + ' '/]" sizeComputationExpression="4" labelPosition="node">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </style>
            </conditionnalStyles>
          </borderedNodeMappings>
          <borderedNodeMappings name="ErrorResource" semanticCandidatesExpression="[self.resource -> select(resource | resource.isActuator = true)/]" domainClass="process_modeling::Resource">
            <conditionnalStyles predicateExpression="aql:self.type.toString()='HUMAN'">
              <style xsi:type="style:SquareDescription" borderSizeComputationExpression="1" labelSize="9" labelExpression="" iconPath="/process_modelling_design/icons/process_step/resources/human32x32.png" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Is actuator: ' + self.isActuator.toString().toUpperFirst() + ' \n Is storage: ' + self.isStorage.toString().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' '/]" labelPosition="node" resizeKind="NSEW" width="5" height="5">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <forbiddenSides>WEST</forbiddenSides>
                <forbiddenSides>SOUTH</forbiddenSides>
                <forbiddenSides>NORTH</forbiddenSides>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_yellow']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.type.toString()='MACHINE'">
              <style xsi:type="style:SquareDescription" borderSizeComputationExpression="1" labelSize="9" labelExpression="" iconPath="/process_modelling_design/icons/process_step/resources/machine32x32a.png" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Is actuator: ' + self.isActuator.toString().toUpperFirst() + ' \n Is storage: ' + self.isStorage.toString().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' '/]" labelPosition="node" resizeKind="NSEW" width="5" height="5">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <forbiddenSides>WEST</forbiddenSides>
                <forbiddenSides>SOUTH</forbiddenSides>
                <forbiddenSides>NORTH</forbiddenSides>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_yellow']"/>
              </style>
            </conditionnalStyles>
          </borderedNodeMappings>
          <conditionnalStyles predicateExpression="aql:self.notation.toString()='OPERATION'">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" iconPath="/process_modelling_design/icons/process_step/notations/operation20x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.notation.toString()='INSPECTION'">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" iconPath="/process_modelling_design/icons/process_step/notations/inspection20x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.notation.toString()='TRANSPORTATION'">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" iconPath="/process_modelling_design/icons/process_step/notations/transportation30x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.notation.toString()='COMPOSITE'">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" iconPath="/process_modelling_design/icons/process_step/notations/composite77x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.notation.toString()='CONFIGURATION'">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" iconPath="/process_modelling_design/icons/process_step/notations/configuration20x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.notation.toString()='DELAY'">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" iconPath="/process_modelling_design/icons/process_step/notations/delay20x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.notation.toString()='NONE'">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" iconPath="/process_modelling_design/icons/process_step/notations/operation20x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </conditionnalStyles>
        </containerMappings>
        <containerMappings xsi:type="description_1:ContainerMappingImport" name="CapabilityImport" preconditionExpression="aql: self.eContainer().eContainer().eClass() = process_modeling::Process and self.eContainer().isErrorGroup = true" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::Capability" reusedNodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='Capability']/@subNodeMappings[name='Constraint'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='Capability']/@subNodeMappings[name='Parameter']" childrenPresentation="List" importedMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='Capability']"/>
        <containerMappings xsi:type="description_1:ContainerMappingImport" name="ProductImport" preconditionExpression="aql: self.eContainer().eContainer().eClass() = process_modeling::Process and self.eContainer().isErrorGroup = true" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::Product" reusedBorderedNodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='Product']/@borderedNodeMappings[name='Storage']" reusedNodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='Capability']/@subNodeMappings[name='Constraint']" childrenPresentation="List" importedMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='Product']"/>
        <containerMappings xsi:type="description_1:ContainerMappingImport" name="UnorderedStepsImport" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="aql: self.elements -> select(unordered | unordered.isErrorGroup=false)" domainClass="process_modeling::UnorderedSteps" reusedContainerMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='UnorderedSteps']/@subContainerMappings[name='UnorderedCapability'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='UnorderedSteps']/@subContainerMappings[name='UnorderedProduct'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='UnorderedSteps']/@subContainerMappings[name='UnorderedStep']" importedMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='UnorderedSteps']">
          <subContainerMappings xsi:type="description_1:ContainerMappingImport" name="UnorderedStepImport" semanticCandidatesExpression="aql: self.steps -> select(step | step.type.toString() = 'REGULAR' and step.isErrorGroup=false and step.eContainer().eClass() = process_modeling::UnorderedSteps)" domainClass="process_modeling::ProcessStep" reusedBorderedNodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@borderedNodeMappings[name='Resource']" importedMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='UnorderedSteps']/@subContainerMappings[name='UnorderedStep']">
            <borderedNodeMappings name="Bordered Unordered Error" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@toolSections.0/@ownedTools[name='Open%20global%20error%20handler']" domainClass="process_modeling::Error">
              <conditionnalStyles predicateExpression="aql: self.domain = process_modeling::EErrorDomain::LOCAL and self.type = process_modeling::EErrorType::NAMED_ERROR">
                <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" labelSize="14" showIcon="false" labelExpression="!" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Domain: ' + self.domain.toString().toLower().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' \n Status: ' + self.status.toString().toLower().toUpperFirst() + ' \n Message: ' + self.message + ' \n Description: ' + self.description + ' \n Mode: ' + self.mode + ' \n Effect: ' + self.effect + ' \n Cause: ' + self.cause + ' \n Prevention: ' + self.prevention + ' \n Severity: ' + self.severity + ' \n Occurrence: ' + self.occurrence + ' \n Detection: ' + self.detection + ' '/]" sizeComputationExpression="4" labelPosition="node">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                  <labelFormat>bold</labelFormat>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql: self.domain = process_modeling::EErrorDomain::GLOBAL and self.type = process_modeling::EErrorType::NAMED_ERROR">
                <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" borderLineStyle="dot" labelSize="14" showIcon="false" labelExpression="!" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Domain: ' + self.domain.toString().toLower().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' \n Status: ' + self.status.toString().toLower().toUpperFirst() + ' \n Message: ' + self.message + ' \n Description: ' + self.description + ' \n Mode: ' + self.mode + ' \n Effect: ' + self.effect + ' \n Cause: ' + self.cause + ' \n Prevention: ' + self.prevention + ' \n Severity: ' + self.severity + ' \n Occurrence: ' + self.occurrence + ' \n Detection: ' + self.detection + ' '/]" sizeComputationExpression="4" labelPosition="node">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                  <labelFormat>bold</labelFormat>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql: self.domain = process_modeling::EErrorDomain::LOCAL and self.type = process_modeling::EErrorType::DEFAULT">
                <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" labelSize="14" showIcon="false" labelExpression="!" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Domain: ' + self.domain.toString().toLower().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' \n Status: ' + self.status.toString().toLower().toUpperFirst() + ' \n Message: ' + self.message + ' \n Description: ' + self.description + ' \n Mode: ' + self.mode + ' \n Effect: ' + self.effect + ' \n Cause: ' + self.cause + ' \n Prevention: ' + self.prevention + ' \n Severity: ' + self.severity + ' \n Occurrence: ' + self.occurrence + ' \n Detection: ' + self.detection + ' '/]" sizeComputationExpression="4" labelPosition="node">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
                  <labelFormat>bold</labelFormat>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql: self.domain = process_modeling::EErrorDomain::GLOBAL and self.type = process_modeling::EErrorType::DEFAULT">
                <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" borderLineStyle="dot" labelSize="14" showIcon="false" labelExpression="!" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Domain: ' + self.domain.toString().toLower().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' \n Status: ' + self.status.toString().toLower().toUpperFirst() + ' \n Message: ' + self.message + ' \n Description: ' + self.description + ' \n Mode: ' + self.mode + ' \n Effect: ' + self.effect + ' \n Cause: ' + self.cause + ' \n Prevention: ' + self.prevention + ' \n Severity: ' + self.severity + ' \n Occurrence: ' + self.occurrence + ' \n Detection: ' + self.detection + ' '/]" sizeComputationExpression="4" labelPosition="node">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
                  <labelFormat>bold</labelFormat>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </style>
              </conditionnalStyles>
            </borderedNodeMappings>
          </subContainerMappings>
        </containerMappings>
        <containerMappings xsi:type="description_1:ContainerMappingImport" name="ErrorUnorderedSteps" semanticCandidatesExpression="aql: self.elements -> select(unordered | unordered.isErrorGroup=true)" domainClass="process_modeling::UnorderedSteps">
          <subContainerMappings xsi:type="description_1:ContainerMappingImport" name="ErrorUnorderedStep" semanticCandidatesExpression="aql: self.steps -> select(step | step.type.toString() = 'REGULAR' and step.isErrorGroup=true and step.eContainer().eClass() = process_modeling::UnorderedSteps)" domainClass="process_modeling::ProcessStep" reusedBorderedNodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@borderedNodeMappings[name='ErrorResource']" importedMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']">
            <borderedNodeMappings name="Bordered Unordered ErrorOnErrorStep" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@toolSections.0/@ownedTools[name='Open%20global%20error%20handler']" domainClass="process_modeling::Error">
              <conditionnalStyles predicateExpression="aql: self.domain = process_modeling::EErrorDomain::LOCAL and self.type = process_modeling::EErrorType::NAMED_ERROR">
                <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" labelSize="14" showIcon="false" labelExpression="!" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Domain: ' + self.domain.toString().toLower().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' \n Status: ' + self.status.toString().toLower().toUpperFirst() + ' \n Message: ' + self.message + ' \n Description: ' + self.description + ' \n Mode: ' + self.mode + ' \n Effect: ' + self.effect + ' \n Cause: ' + self.cause + ' \n Prevention: ' + self.prevention + ' \n Severity: ' + self.severity + ' \n Occurrence: ' + self.occurrence + ' \n Detection: ' + self.detection + ' '/]" sizeComputationExpression="4" labelPosition="node">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                  <labelFormat>bold</labelFormat>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql: self.domain = process_modeling::EErrorDomain::GLOBAL and self.type = process_modeling::EErrorType::NAMED_ERROR">
                <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" borderLineStyle="dot" labelSize="14" showIcon="false" labelExpression="!" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Domain: ' + self.domain.toString().toLower().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' \n Status: ' + self.status.toString().toLower().toUpperFirst() + ' \n Message: ' + self.message + ' \n Description: ' + self.description + ' \n Mode: ' + self.mode + ' \n Effect: ' + self.effect + ' \n Cause: ' + self.cause + ' \n Prevention: ' + self.prevention + ' \n Severity: ' + self.severity + ' \n Occurrence: ' + self.occurrence + ' \n Detection: ' + self.detection + ' '/]" sizeComputationExpression="4" labelPosition="node">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                  <labelFormat>bold</labelFormat>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql: self.domain = process_modeling::EErrorDomain::LOCAL and self.type = process_modeling::EErrorType::DEFAULT">
                <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" labelSize="14" showIcon="false" labelExpression="!" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Domain: ' + self.domain.toString().toLower().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' \n Status: ' + self.status.toString().toLower().toUpperFirst() + ' \n Message: ' + self.message + ' \n Description: ' + self.description + ' \n Mode: ' + self.mode + ' \n Effect: ' + self.effect + ' \n Cause: ' + self.cause + ' \n Prevention: ' + self.prevention + ' \n Severity: ' + self.severity + ' \n Occurrence: ' + self.occurrence + ' \n Detection: ' + self.detection + ' '/]" sizeComputationExpression="4" labelPosition="node">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
                  <labelFormat>bold</labelFormat>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql: self.domain = process_modeling::EErrorDomain::GLOBAL and self.type = process_modeling::EErrorType::DEFAULT">
                <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" borderLineStyle="dot" labelSize="14" showIcon="false" labelExpression="!" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Domain: ' + self.domain.toString().toLower().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' \n Status: ' + self.status.toString().toLower().toUpperFirst() + ' \n Message: ' + self.message + ' \n Description: ' + self.description + ' \n Mode: ' + self.mode + ' \n Effect: ' + self.effect + ' \n Cause: ' + self.cause + ' \n Prevention: ' + self.prevention + ' \n Severity: ' + self.severity + ' \n Occurrence: ' + self.occurrence + ' \n Detection: ' + self.detection + ' '/]" sizeComputationExpression="4" labelPosition="node">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
                  <labelFormat>bold</labelFormat>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </style>
              </conditionnalStyles>
            </borderedNodeMappings>
          </subContainerMappings>
          <subContainerMappings xsi:type="description_1:ContainerMappingImport" name="UnorderedCapability" preconditionExpression="aql: self.eContainer().eContainer().eClass() = process_modeling::UnorderedSteps and self.eContainer().isErrorGroup = true" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::Capability" reusedNodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='Capability']/@subNodeMappings[name='Constraint'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='Capability']/@subNodeMappings[name='Parameter']" childrenPresentation="List" importedMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='UnorderedSteps']/@subContainerMappings[name='UnorderedCapability']"/>
          <subContainerMappings xsi:type="description_1:ContainerMappingImport" name="UnorderedProduct" preconditionExpression="aql: self.eContainer().eContainer().eClass() = process_modeling::UnorderedSteps and self.eContainer().isErrorGroup = true" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::Product" reusedBorderedNodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='Product']/@borderedNodeMappings[name='Storage']" reusedNodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='Product']/@subNodeMappings[name='Constraint']" childrenPresentation="List" importedMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='UnorderedSteps']/@subContainerMappings[name='UnorderedProduct']"/>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="2" labelSize="9" iconPath="/process_modelling_design/icons/process_step/Unordered20x20.png" backgroundStyle="Liquid">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <toolSections name="Errors">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Local Error" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='RegularStepImport']/@borderedNodeMappings[name='Error'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@borderedNodeMappings[name='ErrorOnErrorStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorUnorderedSteps']/@subContainerMappings[name='ErrorUnorderedStep']/@borderedNodeMappings[name='Bordered%20Unordered%20ErrorOnErrorStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='UnorderedStepsImport']/@subContainerMappings[name='UnorderedStepImport']/@borderedNodeMappings[name='Bordered%20Unordered%20Error']" iconPath="/process_modelling_design/icons/process_step/error/LocalError32x32b.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Error" referenceName="errors">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="domain" valueExpression="LOCAL"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="NAMED_ERROR"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="status" valueExpression="INACTIVE"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Global Error" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='RegularStepImport']/@borderedNodeMappings[name='Error'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@borderedNodeMappings[name='ErrorOnErrorStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorUnorderedSteps']/@subContainerMappings[name='ErrorUnorderedStep']/@borderedNodeMappings[name='Bordered%20Unordered%20ErrorOnErrorStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='UnorderedStepsImport']/@subContainerMappings[name='UnorderedStepImport']/@borderedNodeMappings[name='Bordered%20Unordered%20Error']" iconPath="/process_modelling_design/icons/process_step/error/GlobalError32x32b.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Error" referenceName="errors">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="domain" valueExpression="GLOBAL"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="NAMED_ERROR"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="status" valueExpression="INACTIVE"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Local Default Error" precondition="aql: not(container.errors -> exists(err | err.type.toString() = 'DEFAULT'))" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='RegularStepImport']/@borderedNodeMappings[name='Error'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@borderedNodeMappings[name='ErrorOnErrorStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorUnorderedSteps']/@subContainerMappings[name='ErrorUnorderedStep']/@borderedNodeMappings[name='Bordered%20Unordered%20ErrorOnErrorStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='UnorderedStepsImport']/@subContainerMappings[name='UnorderedStepImport']/@borderedNodeMappings[name='Bordered%20Unordered%20Error']" iconPath="/process_modelling_design/icons/process_step/error/DefaultLocalError32x32a.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Error" referenceName="errors">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="domain" valueExpression="LOCAL"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="DEFAULT"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="status" valueExpression="INACTIVE"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="message" valueExpression="none"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="description" valueExpression="none"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="mode" valueExpression="unknown"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="effect" valueExpression="unknown"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="cause" valueExpression="unknown"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="prevention" valueExpression="unknown"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="severity" valueExpression="0"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="occurrence" valueExpression="0"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="detection" valueExpression="0"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="unknown"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Global Default Error" precondition="aql: not(container.errors -> exists(err | err.type.toString() = 'DEFAULT'))" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='RegularStepImport']/@borderedNodeMappings[name='Error'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@borderedNodeMappings[name='ErrorOnErrorStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorUnorderedSteps']/@subContainerMappings[name='ErrorUnorderedStep']/@borderedNodeMappings[name='Bordered%20Unordered%20ErrorOnErrorStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='UnorderedStepsImport']/@subContainerMappings[name='UnorderedStepImport']/@borderedNodeMappings[name='Bordered%20Unordered%20Error']" iconPath="/process_modelling_design/icons/process_step/error/DefaultGlobalError32x32a.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Error" referenceName="errors">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="domain" valueExpression="GLOBAL"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="DEFAULT"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="status" valueExpression="INACTIVE"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="message" valueExpression="none"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="description" valueExpression="none"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="mode" valueExpression="unknown"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="effect" valueExpression="unknown"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="cause" valueExpression="unknown"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="prevention" valueExpression="unknown"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="severity" valueExpression="0"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="occurrence" valueExpression="0"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="detection" valueExpression="0"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="unknown"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="Open global error handler" precondition="aql:self.domain = process_modeling::EErrorDomain::GLOBAL" forceRefresh="true" mappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='RegularStepImport']/@borderedNodeMappings[name='Error'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@borderedNodeMappings[name='ErrorOnErrorStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='UnorderedStepsImport']/@subContainerMappings[name='UnorderedStepImport']/@borderedNodeMappings[name='Bordered%20Unordered%20Error'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorUnorderedSteps']/@subContainerMappings[name='ErrorUnorderedStep']/@borderedNodeMappings[name='Bordered%20Unordered%20ErrorOnErrorStep']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.globalErrorHandler">
                <subModelOperations xsi:type="tool:Navigation" diagramDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Error Steps and Gates">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Regular" forceRefresh="true" elementsToSelect="aql: instance" containerMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']" iconPath="/process_modelling_design/icons/process_step/RegularStepErr32x32.png" extraMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorUnorderedSteps']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:Switch">
                  <cases conditionExpression="aql: container.eClass() = process_modeling::UnorderedSteps">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::ProcessStep" referenceName="steps">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="REGULAR"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="notation" valueExpression="OPERATION"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="true"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Capability" referenceName="capability">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </cases>
                  <default>
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::ProcessStep" referenceName="elements">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="REGULAR"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="notation" valueExpression="OPERATION"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="true"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Capability" referenceName="capability">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </default>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Unordered" forceRefresh="true" containerMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@containerMappings[name='UnorderedSteps']" iconPath="/process_modelling_design/icons/process_step/UnorderedStepsErr32x69.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::UnorderedSteps" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="true"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Decision" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='DecisionGate']" iconPath="/process_modelling_design/icons/gates/DecisionGateErr32x32.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Gate" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="DECISION"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="true"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="Decision"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Parallelism" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='ParallelismGate']" iconPath="/process_modelling_design/icons/gates/ParallelismGateErr32x32.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Gate" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="PARALLELISM"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="true"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="Parallelism"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Collaboration" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='CollaborationGate']" iconPath="/process_modelling_design/icons/gates/CollaborationGateErr32x32.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Gate" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="COLLABORATION"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="true"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="Collaboration"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Variation" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@defaultLayer/@nodeMappings[name='VariationGate']" iconPath="/process_modelling_design/icons/gates/VariationGateErr32x32a.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Gate" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="VARIATION"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="true"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="Variation"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Error" precondition="aql: preTarget.eContainer().eClass() != process_modeling::UnorderedSteps" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@edgeMappings[name='ErrorNode-StepRelationship'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@edgeMappings[name='ErrorRelataionship']" iconPath="/process_modelling_design/icons/relationships/RelationError32x32.png" connectionStartPrecondition="aql: preSource.eContainer().eClass() != process_modeling::UnorderedSteps">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Switch">
                <cases conditionExpression="aql:source.eClass() = process_modeling::Error">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="localErrorHandler" valueExpression="var:target"/>
                  </subModelOperations>
                </cases>
                <default>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.eContainer()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Relationship" referenceName="relationships">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="ERROR"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="source" valueExpression="[source/]"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="target" valueExpression="[target/]"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="[source.id + '_' + target.id + '_error_flow'/]"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="outRelationships" valueExpression="[Relationship.allInstances() -> select(rel : Relationship | rel.id = (source.id + '-' + target.id + '-flow'))/]"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:target">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="inRelationships" valueExpression="[Relationship.allInstances() -> select(rel : Relationship | rel.id = (source.id + '-' + target.id + '-flow'))/]"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </default>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="Delete Local Error Handler Link" forceRefresh="true">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Unset" featureName="localErrorHandler"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.status.toString()='ACTIVE'">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='RegularStepImport']/@borderedNodeMappings[name='Error']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='RegularStepImport']/@borderedNodeMappings[name='Error']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='RegularStepImport']/@borderedNodeMappings[name='Error']/@conditionnalStyles.2/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='RegularStepImport']/@borderedNodeMappings[name='Error']/@conditionnalStyles.0/@style" referenceName="color" value="//@userColorsPalettes[name='myColor']/@entries[name='Active_Error_Light_Red']"/>
          </vsmElementCustomizations>
        </customization>
      </additionalLayers>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="Interface Process" domainClass="process_modeling::Process">
      <defaultLayer name="Default">
        <nodeMappings name="StartStep" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="aql: self.elements -> select(step | step.type.toString() = 'START' and step.exposeToCollaboratingParties=true  and step.isErrorGroup=false and step.eContainer().eClass() = process_modeling::Process)" documentation="[ProcessStep.allInstances() -> select(step | step.type.toString() = 'START')/]" domainClass="process_modeling::ProcessStep">
          <conditionnalStyles predicateExpression="aql:self.isTraced=true">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="feature:alias" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/process_modelling_design/icons/IPL/E_Start_Transactional.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.isTraced=false">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="feature:alias" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/process_modelling_design/icons/IPL/E_Start_NonTransactional.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
        </nodeMappings>
        <nodeMappings name="EndStep" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="aql: self.elements -> select(step | step.type.toString() = 'END'  and step.exposeToCollaboratingParties=true and step.isErrorGroup=false and step.eContainer().eClass() = process_modeling::Process)" documentation="Nekada smo imali ovo u Semantic Candidate Expression:&#xD;&#xA;aql: self.elements -> select(step | step.type.toString() = 'END')&#xD;&#xA;&#xD;&#xA;[ProcessStep.allInstances() -> select(step | step.type.toString() = 'END')/]" domainClass="process_modeling::ProcessStep">
          <conditionnalStyles predicateExpression="aql:self.isTraced=true">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="feature:alias" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/process_modelling_design/icons/IPL/E_End_Transactional.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.isTraced=false">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="feature:alias" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/process_modelling_design/icons/IPL/E_End_NonTransactional.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
        </nodeMappings>
        <nodeMappings name="DecisionGate" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="aql: self.elements -> select(gate | gate.type.toString() = 'DECISION'  and gate.exposeToCollaboratingParties=true and gate.isErrorGroup=false and gate.eContainer().eClass() = process_modeling::Process)" documentation="[Gate.allInstances() -> select(gate | gate.type.toString() = 'DECISION' and gate.isErrorGroup=false)/]" domainClass="process_modeling::Gate">
          <conditionnalStyles predicateExpression="aql:self.isTraced=true">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="feature:alias" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/process_modelling_design/icons/IPL/G_Dec_Transactional.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.isTraced=false">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="feature:alias" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/process_modelling_design/icons/IPL/G_Dec_NonTransactional.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
        </nodeMappings>
        <nodeMappings name="ParallelismGate" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="aql: self.elements -> select(gate | gate.type.toString() = 'PARALLELISM'  and gate.exposeToCollaboratingParties=true and gate.isErrorGroup=false and gate.eContainer().eClass() = process_modeling::Process)" documentation="Nekada smo imali ovo u Semantic Candidate Expression:&#xD;&#xA;aql: self.elements -> select(gate | gate.type.toString() = 'PARALLELISM')&#xD;&#xA;&#xD;&#xA;[Gate.allInstances() -> select(gate | gate.type.toString() = 'PARALLELISM' and gate.isErrorGroup=false)/]" domainClass="process_modeling::Gate">
          <conditionnalStyles predicateExpression="aql:self.isTraced=true">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="feature:alias" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/process_modelling_design/icons/IPL/G_Par_Transactional.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.isTraced=false">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="feature:alias" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/process_modelling_design/icons/IPL/G_Par_NonTransactional.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
        </nodeMappings>
        <nodeMappings name="CollaborationGate" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="aql: self.elements -> select(gate | gate.type.toString() = 'COLLABORATION'  and gate.exposeToCollaboratingParties=true and gate.isErrorGroup=false and gate.eContainer().eClass() = process_modeling::Process)" documentation="[Gate.allInstances() -> select(gate | gate.type.toString() = 'COLLABORATION' and gate.isErrorGroup=false)/]" domainClass="process_modeling::Gate">
          <conditionnalStyles predicateExpression="aql:self.isTraced=true">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="feature:alias" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/process_modelling_design/icons/IPL/E_End_Transactional.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.isTraced=false">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="feature:alias" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/process_modelling_design/icons/IPL/E_End_NonTransactional.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
        </nodeMappings>
        <nodeMappings name="VariationGate" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="aql: self.elements -> select(gate | gate.type.toString() = 'VARIATION'  and gate.exposeToCollaboratingParties=true and gate.isErrorGroup=false and gate.eContainer().eClass() = process_modeling::Process)" domainClass="process_modeling::Gate">
          <conditionnalStyles predicateExpression="aql:self.isTraced=true">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="feature:alias" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/process_modelling_design/icons/IPL/E_End_Transactional.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.isTraced=false">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="feature:alias" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/process_modelling_design/icons/IPL/E_End_NonTransactional.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
        </nodeMappings>
        <edgeMappings name="FlowRelataionship" semanticCandidatesExpression="[Relationship.allInstances() -> select(relationship | relationship.type.toString() = 'FLOW')/]" sourceMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@nodeMappings[name='StartStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@nodeMappings[name='DecisionGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@nodeMappings[name='ParallelismGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@nodeMappings[name='CollaborationGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@nodeMappings[name='VariationGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='UnorderedSteps']" targetMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@nodeMappings[name='EndStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@nodeMappings[name='DecisionGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@nodeMappings[name='ParallelismGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@nodeMappings[name='CollaborationGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@nodeMappings[name='VariationGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='UnorderedSteps']" targetFinderExpression="aql: self.eContainer().elements->select(element | element.id = self.target.id)" sourceFinderExpression="aql: self.eContainer().elements->select(element | element.id = self.source.id)" domainClass="process_modeling::Relationship" useDomainElement="true">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="9" showIcon="false" labelExpression="feature:logicalCondition">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="CollaborationRelationship" semanticCandidatesExpression="[Relationship.allInstances() -> select(relationship | relationship.type.toString() = 'COLLABORATION')/]" documentation="Ranije:&#xD;&#xA;aql: self.relations -> select(relation | relation.type.toString() = 'COLLABORATION')" sourceMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']" targetMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']" targetFinderExpression="aql: self.eContainer().elements ->select(element | element.id = self.target.id)" sourceFinderExpression="aql: self.eContainer().elements->select(element | element.id = self.source.id)" domainClass="process_modeling::Relationship" useDomainElement="true">
          <style lineStyle="dash_dot" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="9" showIcon="false" labelExpression="feature:message">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="MaterialRelationship" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@toolSections.3/@ownedTools[name='Delete%20Product%20Equivalent%20Link']" sourceMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='Product'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='RegularStepImport'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']" targetMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='Product']" targetFinderExpression="aql: self.equivalent">
          <style lineStyle="dash" targetArrow="InputClosedArrow" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="9" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ContainmentRelationship" sourceMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep']" targetMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='Product']" targetFinderExpression="aql: self.inProducts->union(self.outProducts)">
          <style targetArrow="NoDecoration" sizeComputationExpression="2" foldingStyle="SOURCE">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="9" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ContainmentRelationship2" sourceMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep']" targetMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='Capability']" targetFinderExpression="aql: self.capability">
          <style targetArrow="NoDecoration" sizeComputationExpression="2" foldingStyle="SOURCE">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="9" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="UnorderedContainmentRelationship" sourceMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='UnorderedSteps']" targetMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='UnorderedSteps']/@subContainerMappings[name='UnorderedStep']" targetFinderExpression="aql: self.steps">
          <style targetArrow="NoDecoration" sizeComputationExpression="0" foldingStyle="SOURCE">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <centerLabelStyleDescription labelSize="9" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ParameterRelationship" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@toolSections.2/@ownedTools[name='Delete%20Parameter%20Link']" targetMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='Product']" targetFinderExpression="aql: self.product">
          <conditionnalStyles predicateExpression="aql: self.eContainer().eClass() = process_modeling::Process">
            <style lineStyle="dash" targetArrow="InputFillClosedArrow" sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <centerLabelStyleDescription labelSize="9" showIcon="false">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: self.eContainer().eClass() = process_modeling::SubProcess">
            <style lineStyle="dash" sourceArrow="InputFillClosedArrow" targetArrow="NoDecoration" sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <centerLabelStyleDescription labelSize="9" showIcon="false">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="ParameterRelationship2" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@toolSections.2/@ownedTools[name='Delete%20Parameter%20Link']" targetFinderExpression="aql: self.parameter">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="12">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="RegularStep" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="aql: self.elements -> select(step | step.type.toString() = 'REGULAR' and step.exposeToCollaboratingParties=true and step.isErrorGroup=false and step.eContainer().eClass() = process_modeling::Process)" domainClass="process_modeling::ProcessStep">
          <borderedNodeMappings name="Resource" semanticCandidatesExpression="[self.resource -> select(resource | resource.isActuator = true)/]" domainClass="process_modeling::Resource">
            <conditionnalStyles predicateExpression="aql:self.type.toString()='HUMAN'">
              <style xsi:type="style:SquareDescription" borderSizeComputationExpression="1" labelSize="9" labelExpression="" iconPath="/process_modelling_design/icons/process_step/resources/human32x32.png" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Is actuator: ' + self.isActuator.toString().toUpperFirst() + ' \n Is storage: ' + self.isStorage.toString().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' '/]" labelPosition="node" resizeKind="NSEW" width="5" height="5">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <forbiddenSides>WEST</forbiddenSides>
                <forbiddenSides>SOUTH</forbiddenSides>
                <forbiddenSides>NORTH</forbiddenSides>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_yellow']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.type.toString()='MACHINE'">
              <style xsi:type="style:SquareDescription" borderSizeComputationExpression="1" labelSize="9" labelExpression="" iconPath="/process_modelling_design/icons/process_step/resources/machine32x32a.png" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Is actuator: ' + self.isActuator.toString().toUpperFirst() + ' \n Is storage: ' + self.isStorage.toString().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' '/]" labelPosition="node" resizeKind="NSEW" width="5" height="5">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <forbiddenSides>WEST</forbiddenSides>
                <forbiddenSides>SOUTH</forbiddenSides>
                <forbiddenSides>NORTH</forbiddenSides>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_yellow']"/>
              </style>
            </conditionnalStyles>
          </borderedNodeMappings>
          <conditionnalStyles predicateExpression="aql:self.notation.toString()='OPERATION' and self.isTraced=true">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="9" showIcon="false" labelExpression="feature:alias" labelAlignment="RIGHT" workspacePath="/process_modelling_design/icons/IPL/S_Op_Transactional.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.notation.toString()='OPERATION' and self.isTraced=false">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="9" showIcon="false" labelExpression="feature:alias" labelAlignment="RIGHT" workspacePath="/process_modelling_design/icons/IPL/S_Op_NonTransactional.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.notation.toString()='INSPECTION'  and self.isTraced=true">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="9" showIcon="false" labelExpression="feature:alias" labelAlignment="RIGHT" workspacePath="/process_modelling_design/icons/IPL/S_In_Transactional.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.notation.toString()='TRANSPORTATION'">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" iconPath="/process_modelling_design/icons/process_step/notations/transportation30x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.notation.toString()='COMPOSITE'">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" iconPath="/process_modelling_design/icons/process_step/notations/composite77x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.notation.toString()='CONFIGURATION'">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" iconPath="/process_modelling_design/icons/process_step/notations/configuration20x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.notation.toString()='DELAY'">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" iconPath="/process_modelling_design/icons/process_step/notations/delay20x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.notation.toString()='NONE'">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" iconPath="/process_modelling_design/icons/process_step/notations/operation20x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </conditionnalStyles>
        </containerMappings>
        <containerMappings name="Product" preconditionExpression="aql: self.eContainer().eContainer().eClass() = process_modeling::Process and self.eContainer().isErrorGroup = false and self.exposeToCollaboratingParties = true" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::Product" childrenPresentation="List">
          <borderedNodeMappings name="Storage" semanticCandidatesExpression="[self.storage -> select(resource | resource.isStorage = true)/]" domainClass="process_modeling::Resource">
            <style xsi:type="style:SquareDescription" borderSizeComputationExpression="1" labelSize="9" labelExpression="" iconPath="/process_modelling_design/icons/process_step/resources/storage40x32.png" tooltipExpression="[' ID: ' + self.id + ' \n Name: ' + self.name + ' \n Is actuator: ' + self.isActuator.toString().toUpperFirst() + ' \n Is storage: ' + self.isStorage.toString().toUpperFirst() + ' \n Type: ' + self.type.toString().toLower().toUpperFirst() + ' '/]" labelPosition="node" resizeKind="NSEW" width="5" height="5">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_yellow']"/>
            </style>
          </borderedNodeMappings>
          <subNodeMappings name="Constraint" preconditionExpression="aql: self.exposeToCollaboratingParties = true" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::Constraint">
            <conditionnalStyles predicateExpression="aql:self.isPersisted=false">
              <style xsi:type="style:SquareDescription" labelSize="9" showIcon="false" labelExpression="aql: self.physicalDimension + ' ' + self.relationalOperator + ' ' + self.value + ' ' + self.metricUnit" iconPath="/process_modelling_design/icons/process_step/products_and_capability/constraint16x16.png" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.isPersisted=true">
              <style xsi:type="style:SquareDescription" labelSize="9" showIcon="false" labelExpression="aql: self.physicalDimension + ' ' + self.relationalOperator + ' ' + self.value + ' ' + self.metricUnit" iconPath="/process_modelling_design/icons/process_step/products_and_capability/constraint16x16.png" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </conditionnalStyles>
          </subNodeMappings>
          <conditionnalStyles predicateExpression="aql: self.eContainer().inProducts -> exists(product | product = self and self.isStored = true)">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" labelExpression="aql: 'IN: ' + self.name" iconPath="/process_modelling_design/icons/process_step/resources/storage25x20c.png" roundedCorner="true" widthComputationExpression="12" heightComputationExpression="7" backgroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Light_Blue']" foregroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Light_Blue']">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: self.eContainer().outProducts -> exists(product | product = self and self.isStored = true)">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" labelExpression="aql: 'OUT: ' + self.name" iconPath="/process_modelling_design/icons/process_step/resources/storage25x20c.png" roundedCorner="true" widthComputationExpression="12" heightComputationExpression="7" backgroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Blue']" foregroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Blue']">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: self.eContainer().inProducts -> exists(product | product = self and self.isStored = false)">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" labelExpression="aql: 'IN: ' + self.name" roundedCorner="true" widthComputationExpression="12" heightComputationExpression="7" backgroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Light_Blue']" foregroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Light_Blue']">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: self.eContainer().outProducts -> exists(product | product = self and self.isStored = false)">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" labelExpression="aql: 'OUT: ' + self.name" roundedCorner="true" widthComputationExpression="12" heightComputationExpression="7" backgroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Blue']" foregroundColor="//@userColorsPalettes[name='myColor']/@entries[name='Product_Blue']">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
            </style>
          </conditionnalStyles>
        </containerMappings>
        <containerMappings name="Capability" preconditionExpression="aql: self.eContainer().eContainer().eClass() = process_modeling::Process and self.eContainer().isErrorGroup = false and self.exposeToCollaboratingParties = true" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::Capability" childrenPresentation="List">
          <subNodeMappings name="Constraint" preconditionExpression="aql: self.exposeToCollaboratingParties = true" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::Constraint">
            <conditionnalStyles predicateExpression="aql:self.isPersisted=false">
              <style xsi:type="style:SquareDescription" labelSize="9" showIcon="false" labelExpression="aql: self.physicalDimension + ' ' + self.relationalOperator + ' ' + self.value + ' ' + self.metricUnit" iconPath="/process_modelling_design/icons/process_step/products_and_capability/constraint16x16.png" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.isPersisted=true and self.persistenceType.toString()='HASHED'">
              <style xsi:type="style:SquareDescription" labelSize="9" showIcon="false" labelExpression="aql: 'HV: ' + self.physicalDimension + ' ' + self.relationalOperator + ' ' + self.value + ' ' + self.metricUnit" iconPath="/process_modelling_design/icons/process_step/products_and_capability/constraint16x16.png" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.isPersisted=true and self.persistenceType.toString()='PLAIN_TEXT'">
              <style xsi:type="style:SquareDescription" labelSize="9" showIcon="false" labelExpression="aql: 'PT: ' + self.physicalDimension + ' ' + self.relationalOperator + ' ' + self.value + ' ' + self.metricUnit" iconPath="/process_modelling_design/icons/process_step/products_and_capability/constraint16x16.png" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.isPersisted=true and self.persistenceType.toString()='ENCRYPTED'">
              <style xsi:type="style:SquareDescription" labelSize="9" showIcon="false" labelExpression="aql: 'EV: ' + self.physicalDimension + ' ' + self.relationalOperator + ' ' + self.value + ' ' + self.metricUnit" iconPath="/process_modelling_design/icons/process_step/products_and_capability/constraint16x16.png" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </conditionnalStyles>
          </subNodeMappings>
          <subNodeMappings name="Parameter" preconditionExpression="aql: self.exposeToCollaboratingParties = true" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::Parameter">
            <conditionnalStyles predicateExpression="aql:self.isPersisted=false">
              <style xsi:type="style:SquareDescription" labelSize="9" showIcon="false" labelExpression="aql: self.key + ' : ' + self.value" iconPath="/process_modelling_design/icons/process_step/products_and_capability/constraint16x16.png" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.isPersisted=true">
              <style xsi:type="style:SquareDescription" labelSize="9" showIcon="false" labelExpression="aql: self.key + ' : ' + self.value" iconPath="/process_modelling_design/icons/process_step/products_and_capability/constraint16x16.png" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </conditionnalStyles>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" roundedCorner="true" widthComputationExpression="12" heightComputationExpression="7">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
          </style>
        </containerMappings>
        <containerMappings name="UnorderedSteps" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="aql: self.elements -> select(unordered | unordered.isErrorGroup=false)" domainClass="process_modeling::UnorderedSteps">
          <subContainerMappings xsi:type="description_1:ContainerMappingImport" name="UnorderedStep" semanticCandidatesExpression="aql: self.steps -> select(step | step.type.toString() = 'REGULAR' and step.isErrorGroup=false and step.eContainer().eClass() = process_modeling::UnorderedSteps)" domainClass="process_modeling::ProcessStep" reusedBorderedNodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@borderedNodeMappings[name='Resource']" importedMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep']"/>
          <subContainerMappings xsi:type="description_1:ContainerMappingImport" name="UnorderedCapability" preconditionExpression="aql: self.eContainer().eContainer().eClass() = process_modeling::UnorderedSteps and self.eContainer().isErrorGroup = false" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::Capability" reusedNodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='Capability']/@subNodeMappings[name='Parameter'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='Capability']/@subNodeMappings[name='Constraint']" childrenPresentation="List" importedMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='Capability']"/>
          <subContainerMappings xsi:type="description_1:ContainerMappingImport" name="UnorderedProduct" preconditionExpression="aql: self.eContainer().eContainer().eClass() = process_modeling::UnorderedSteps and self.eContainer().isErrorGroup = false" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::Product" reusedBorderedNodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='Product']/@borderedNodeMappings[name='Storage']" reusedNodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='Product']/@subNodeMappings[name='Constraint']" childrenPresentation="List" importedMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='Product']"/>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="2" labelSize="9" iconPath="/process_modelling_design/icons/process_step/Unordered20x20.png" backgroundStyle="Liquid">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <toolSections name="Steps">
          <ownedTools xsi:type="tool:NodeCreationDescription" documentation="[ProcessStep.allInstances() -> forAll(ps : ProcessStep | ps.type.toString() = 'END' or ps.type.toString() = 'REGULAR')/]" name="Start" precondition="[ProcessStep.allInstances() -> forAll(ps : ProcessStep | ps.type.toString() = 'END' or ps.type.toString() = 'REGULAR')/]" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@nodeMappings[name='StartStep']" iconPath="/process_modelling_design/icons/process_step/StartStep32x32.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::ProcessStep" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="START"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="false"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="Start"/>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="startStep" valueExpression="var:instance"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" documentation="[ProcessStep.allInstances() -> forAll(ps : ProcessStep | not (ps.type.toString() = 'END'))/]" name="End" precondition="[not(ProcessStep.allInstances() -> exists(ps : ProcessStep | ps.type.toString() = 'END'))/]" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@nodeMappings[name='EndStep']" iconPath="/process_modelling_design/icons/process_step/EndStep32x32.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::ProcessStep" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="END"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="false"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="End"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Regular" forceRefresh="true" elementsToSelect="aql: instance" containerMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep']" iconPath="/process_modelling_design/icons/process_step/RegularStep32x32a.png" extraMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='UnorderedSteps']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:Switch">
                  <cases conditionExpression="aql: container.eClass() = process_modeling::UnorderedSteps">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::ProcessStep" referenceName="steps">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="REGULAR"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="notation" valueExpression="OPERATION"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="false"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Capability" referenceName="capability">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </cases>
                  <default>
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::ProcessStep" referenceName="elements">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="REGULAR"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="notation" valueExpression="OPERATION"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="false"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Capability" referenceName="capability">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </default>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Unordered" forceRefresh="true" containerMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='UnorderedSteps']" iconPath="/process_modelling_design/icons/process_step/UnorderedSteps32x69a.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::UnorderedSteps" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="false"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="Delete Relationships when Deleting Elements" forceRefresh="true">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Switch">
                <cases conditionExpression="aql:element.inRelationships -> union(element.outRelationships) -> size() > 0">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:element.inRelationships -> union(element.outRelationships)">
                    <subModelOperations xsi:type="tool_1:RemoveElement">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                        <subModelOperations xsi:type="tool_1:RemoveElement"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </cases>
                <cases conditionExpression="aql:element.inRelationships -> union(element.outRelationships) -> size() = 0">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                    <subModelOperations xsi:type="tool_1:RemoveElement"/>
                  </subModelOperations>
                </cases>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Gates">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Decision" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@nodeMappings[name='DecisionGate']" iconPath="/process_modelling_design/icons/gates/DecisionGate32x32.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Gate" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="DECISION"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="false"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="Decision"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Parallelism" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@nodeMappings[name='ParallelismGate']" iconPath="/process_modelling_design/icons/gates/ParallelismGate32x32.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Gate" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="PARALLELISM"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="false"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="Parallelism"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Collaboration" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@nodeMappings[name='CollaborationGate']" iconPath="/process_modelling_design/icons/gates/CollaborationGate32x32.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Gate" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="COLLABORATION"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="false"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="Collaboration"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Variation" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@nodeMappings[name='VariationGate']" iconPath="/process_modelling_design/icons/gates/VariationGate32x32a.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Gate" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="VARIATION"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="false"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="Variation"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Sub-Processes">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Sub-Process" forceRefresh="true" iconPath="/process_modelling_design/icons/process_step/SubProcess32x69.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::SubProcess" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="false"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Input Parameter" forceRefresh="true" iconPath="/process_modelling_design/icons/parameters/inparameter32x32.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::ProcessParameter" referenceName="parameters">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="INPUT_PRODUCT"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Output Parameter" forceRefresh="true" iconPath="/process_modelling_design/icons/parameters/outparameter32x32.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::ProcessParameter" referenceName="parameters">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="OUTPUT_PRODUCT"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="Delete Parameter Link" forceRefresh="true">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Unset" featureName="product"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Capability and Product">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Capability" precondition="[container.oclIsTypeOf(ProcessStep)/]" forceRefresh="true" containerMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='Capability']" iconPath="/process_modelling_design/icons/process_step/products_and_capability/capability55x32.png" extraMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Capability" referenceName="capability">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Input Product" precondition="[container.oclIsTypeOf(ProcessStep)/]" forceRefresh="true" containerMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='Product']" iconPath="/process_modelling_design/icons/process_step/products_and_capability/inProduct55x32.png" extraMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Product" referenceName="inProducts">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="quantity" valueExpression="1"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Output Product" precondition="[container.oclIsTypeOf(ProcessStep)/]" forceRefresh="true" containerMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='Product']" iconPath="/process_modelling_design/icons/process_step/products_and_capability/outProduct55x32.png" extraMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Product" referenceName="outProducts">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="quantity" valueExpression="1"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Constraint" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='Capability']/@subNodeMappings[name='Constraint'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='Product']/@subNodeMappings[name='Constraint']" iconPath="/process_modelling_design/icons/process_step/products_and_capability/constraint55x34.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Constraint" referenceName="constraints"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Parameter" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='Capability']/@subNodeMappings[name='Parameter']" iconPath="/process_modelling_design/icons/process_step/products_and_capability/parameter55x32.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Parameter" referenceName="parameters"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="Delete Product Equivalent Link" forceRefresh="true">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Unset" featureName="equivalent"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Resources">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Human Worker" precondition="aql: not(container.resource != null))" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@borderedNodeMappings[name='Resource']" iconPath="/process_modelling_design/icons/process_step/resources/human32x32.png" extraMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Resource" referenceName="resource">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isActuator" valueExpression="true"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isStorage" valueExpression="false"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="HUMAN"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Machine" precondition="aql: not(container.resource != null))" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@borderedNodeMappings[name='Resource']" iconPath="/process_modelling_design/icons/process_step/resources/machine32x32a.png" extraMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Resource" referenceName="resource">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isActuator" valueExpression="true"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isStorage" valueExpression="false"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="MACHINE"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Storage" precondition="aql: not(container.storage != null))" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='Product']/@borderedNodeMappings[name='Storage']" iconPath="/process_modelling_design/icons/process_step/resources/storage40x32.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Resource" referenceName="storage">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isActuator" valueExpression="false"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isStorage" valueExpression="true"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="MACHINE"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Relations">
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Flow" precondition="aql: preTarget.eContainer().eClass() != process_modeling::UnorderedSteps" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@edgeMappings[name='FlowRelataionship']" iconPath="/process_modelling_design/icons/relationships/RelationFlow32x32.png" connectionStartPrecondition="aql: preSource.eContainer().eClass() != process_modeling::UnorderedSteps">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.eContainer()">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Relationship" referenceName="relationships">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="FLOW"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="source" valueExpression="[source/]"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="target" valueExpression="[target/]"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="[source.id + '_' + target.id + '_flow'/]"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="outRelationships" valueExpression="[Relationship.allInstances() -> select(rel : Relationship | rel.id = (source.id + '-' + target.id + '-flow'))/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:target">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="inRelationships" valueExpression="[Relationship.allInstances() -> select(rel : Relationship | rel.id = (source.id + '-' + target.id + '-flow'))/]"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Collaboration" precondition="aql: preTarget.eContainer().eClass() != process_modeling::UnorderedSteps" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@edgeMappings[name='CollaborationRelationship']" iconPath="/process_modelling_design/icons/relationships/RelationCollaboration32x32a.png" connectionStartPrecondition="aql: preSource.eContainer().eClass() != process_modeling::UnorderedSteps">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.eContainer()">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Relationship" referenceName="relationships">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="COLLABORATION"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="source" valueExpression="[source/]"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="target" valueExpression="[target/]"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="[source.id + '_' + target.id + '_collaboration'/]"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ourRelationships" valueExpression="[Relationship.allInstances() -> select(rel : Relationship | rel.id = (source.id + '-' + target.id + '-collaboration'))/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:target">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="inRelationships" valueExpression="[Relationship.allInstances() -> select(rel : Relationship | rel.id = (source.id + '-' + target.id + '-collaboration'))/]"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Product Equivalent" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@edgeMappings[name='MaterialRelationship']" iconPath="/process_modelling_design/icons/relationships/RelationshipEquivalent32x32.png">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Switch">
                <cases conditionExpression="aql: source.eClass() = process_modeling::ProcessStep">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: source">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Product" referenceName="inProducts" variableName="inProd">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="equivalent" valueExpression="var:target"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:target.name"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="isStored" valueExpression="false"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="quantity" valueExpression="aql:target.quantity"/>
                      <subModelOperations xsi:type="tool_1:For" expression="aql:target.constraints">
                        <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:inProd">
                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Constraint" referenceName="constraints">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="physicalDimension" valueExpression="aql:i.physicalDimension"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="relationalOperator" valueExpression="aql:i.relationalOperator"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:i.value"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="metricUnit" valueExpression="aql:i.metricUnit"/>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </cases>
                <default>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="equivalent" valueExpression="var:target"/>
                  </subModelOperations>
                </default>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Parameter Link" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@edgeMappings[name='ParameterRelationship'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@edgeMappings[name='ParameterRelationship2']" iconPath="/process_modelling_design/icons/relationships/RelationshipParameter32x32.png">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: source">
                <subModelOperations xsi:type="tool_1:Switch">
                  <cases conditionExpression="aql: target.eClass() = process_modeling::Product">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="product" valueExpression="aql:target"/>
                  </cases>
                  <default>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="parameter" valueExpression="aql:target"/>
                  </default>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.status.toString()='ACTIVE'">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.6/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.7/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.6/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.0/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.2/@style" referenceName="backgroundColor" value="//@userColorsPalettes[name='myColor']/@entries[name='PS_Active_Light_Blue']"/>
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.6/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.7/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.6/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.0/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.2/@style" referenceName="foregroundColor" value="//@userColorsPalettes[name='myColor']/@entries[name='PS_Active_Light_Blue']"/>
            <featureCustomizations xsi:type="description:EReferenceCustomization" referenceName="color" value="//@userColorsPalettes[name='myColor']/@entries[name='PS_Active_Light_Blue']"/>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.status.toString()='ERROR'">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.6/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.7/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.6/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.0/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.2/@style" referenceName="backgroundColor" value="//@userColorsPalettes[name='myColor']/@entries[name='PS_Error_Light_Red']"/>
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.6/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.7/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.6/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.0/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.2/@style" referenceName="foregroundColor" value="//@userColorsPalettes[name='myColor']/@entries[name='PS_Error_Light_Red']"/>
            <featureCustomizations xsi:type="description:EReferenceCustomization" referenceName="color" value="//@userColorsPalettes[name='myColor']/@entries[name='PS_Error_Light_Red']"/>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.status.toString()='NONE'">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.6/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.7/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.6/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.0/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.2/@style" referenceName="backgroundColor">
              <value href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </featureCustomizations>
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.6/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.7/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Interface%20Process']/@defaultLayer/@containerMappings[name='RegularStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.6/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.0/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Matched%20Process']/@additionalLayers[name='ErrorHandling']/@containerMappings[name='ErrorStep']/@conditionnalStyles.2/@style" referenceName="foregroundColor">
              <value href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </featureCustomizations>
            <featureCustomizations xsi:type="description:EReferenceCustomization" referenceName="color">
              <value href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </featureCustomizations>
          </vsmElementCustomizations>
        </customization>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="CBP" initialisation="true" domainClass="process_modeling::Process">
      <defaultLayer name="Default">
        <edgeMappings name="FlowRelataionship" semanticCandidatesExpression="[Relationship.allInstances() -> select(relationship | relationship.type.toString() = 'FLOW')/]" sourceMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subNodeMappings[name='DecisionGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subNodeMappings[name='ParallelismGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subNodeMappings[name='StartStep']" targetMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subNodeMappings[name='DecisionGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subNodeMappings[name='ParallelismGate'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subNodeMappings[name='EndStep']" targetFinderExpression="[ProcessStep.allInstances() -> select(step | step.id = self.target.id) -> union(Gate.allInstances() -> select(gate | gate.id = self.target.id))  /]" sourceFinderExpression="[ProcessStep.allInstances() -> select(step | step.id = self.source.id) -> union(Gate.allInstances() -> select(gate | gate.id = self.source.id))  /]" domainClass="process_modeling::Relationship" useDomainElement="true">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="9" showIcon="false" labelExpression="feature:logicalCondition">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ContainmentRelationship2" sourceMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']" targetMapping="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='ContractualObligation']" targetFinderExpression="aql: self.contractualObligation">
          <style targetArrow="NoDecoration" sizeComputationExpression="2" foldingStyle="SOURCE">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="9" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="VirtualOrganization" semanticCandidatesExpression="aql: self.elements -> select(pool | pool.isErrorGroup=false)" domainClass="process_modeling::VirtualOrganization">
          <subContainerMappings name="Organization" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::Organization">
            <subNodeMappings name="StartStep" semanticCandidatesExpression="aql: self.elements -> select(step | step.type.toString() = 'START')" domainClass="process_modeling::ProcessStep">
              <conditionnalStyles predicateExpression="aql: self.type.toString() = 'START2'">
                <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" labelSize="14" showIcon="false" labelExpression="!" sizeComputationExpression="4" labelPosition="node">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                  <labelFormat>bold</labelFormat>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql: self.type.toString() = 'START'">
                <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" borderLineStyle="dash" labelSize="9" showIcon="false" labelExpression="Start" sizeComputationExpression="5" labelPosition="node" resizeKind="NSEW">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
                </style>
              </conditionnalStyles>
            </subNodeMappings>
            <subNodeMappings name="EndStep" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="aql: self.elements -> select(step | step.type.toString() = 'END')" documentation="Nekada smo imali ovo u Semantic Candidate Expression:&#xD;&#xA;aql: self.elements -> select(step | step.type.toString() = 'END')" domainClass="process_modeling::ProcessStep">
              <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="3" labelSize="9" showIcon="false" labelExpression="End" sizeComputationExpression="5" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              </style>
            </subNodeMappings>
            <subNodeMappings name="DecisionGate" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="aql: self.elements -> select(gate | gate.type.toString() = 'DECISION')" domainClass="process_modeling::Gate">
              <style xsi:type="style:LozengeNodeDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" labelExpression="DEC" sizeComputationExpression="5" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              </style>
            </subNodeMappings>
            <subNodeMappings name="ParallelismGate" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="aql: self.elements -> select(gate | gate.type.toString() = 'PARALLELISM' and gate.isErrorGroup=false)" documentation="Nekada smo imali ovo u Semantic Candidate Expression:&#xD;&#xA;aql: self.elements -> select(gate | gate.type.toString() = 'PARALLELISM')" domainClass="process_modeling::Gate">
              <style xsi:type="style:LozengeNodeDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" labelExpression="PAR" sizeComputationExpression="5" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              </style>
            </subNodeMappings>
            <subContainerMappings name="RegularStep" deletionDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Relationships%20when%20Deleting%20Elements']" semanticCandidatesExpression="aql: self.elements -> select(step | step.type.toString() = 'REGULAR')" domainClass="process_modeling::ProcessStep">
              <conditionnalStyles predicateExpression="aql:self.notation.toString()='OPERATION' ">
                <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" iconPath="/process_modelling_design/icons/process_step/notations/operation20x20_CBP.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
                  <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
                  <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:self.notation.toString()='INSPECTION'">
                <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" iconPath="/process_modelling_design/icons/process_step/notations/inspection20x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
                  <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
                  <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:self.notation.toString()='TRANSPORTATION'">
                <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" iconPath="/process_modelling_design/icons/process_step/notations/transportation30x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
                  <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
                  <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:self.notation.toString()='CONFIGURATION'">
                <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" iconPath="/process_modelling_design/icons/process_step/notations/configuration20x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
                  <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
                  <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:self.notation.toString()='DELAY'">
                <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" iconPath="/process_modelling_design/icons/process_step/notations/delay20x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
                  <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
                  <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:self.notation.toString()='NONE'">
                <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" iconPath="/process_modelling_design/icons/process_step/notations/operation20x20.png" widthComputationExpression="10" heightComputationExpression="5" backgroundStyle="Liquid">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
                  <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
                  <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
                </style>
              </conditionnalStyles>
            </subContainerMappings>
            <subContainerMappings name="ContractualObligation" semanticCandidatesExpression="feature:eAllContents" synchronizationLock="true" documentation="aql: self.eContainer().eContainer().eClass() = process_modeling::Organization" domainClass="process_modeling::ContractualObligation" childrenPresentation="List">
              <subNodeMappings name="Parameter" semanticCandidatesExpression="feature:eAllContents" domainClass="process_modeling::Parameter">
                <style xsi:type="style:SquareDescription" labelSize="9" showIcon="false" labelExpression="aql: self.key + ' : ' + self.value" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </subNodeMappings>
              <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" roundedCorner="true" widthComputationExpression="12" heightComputationExpression="7">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
                <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
              </style>
            </subContainerMappings>
            <conditionnalStyles predicateExpression="aql: self.role.toString()='BROKER'">
              <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="aql: '\u2714' + '(B) ' + self.name">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql: self.role.toString()='CORE_PARTNER'">
              <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="aql: '\u2714' + '(CP) ' + self.name">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql: self.role.toString()='ADDITIONAL_PARTNER'">
              <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="aql: '(AP) ' + self.name">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </style>
            </conditionnalStyles>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="2" labelSize="12" showIcon="false" labelExpression="aql: self.name" backgroundStyle="Liquid">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
          </style>
        </containerMappings>
        <toolSections name="Steps">
          <ownedTools xsi:type="tool:NodeCreationDescription" documentation="[ProcessStep.allInstances() -> forAll(ps : ProcessStep | ps.type.toString() = 'END' or ps.type.toString() = 'REGULAR')/]&#xD;&#xA;[ProcessStep.allInstances() -> forAll(ps : ProcessStep | ps.type.toString() = 'END' or ps.type.toString() = 'REGULAR')/]&#xD;&#xA;&#xD;&#xA;ne radi??? aql: container.elements -> forAll(ps | ps.type.toString() = 'END' or ps.type.toString() = 'REGULAR')" name="Start" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subNodeMappings[name='StartStep']" iconPath="/process_modelling_design/icons/process_step/StartStep32x32.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::ProcessStep" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="START"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="Start"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" documentation="[ProcessStep.allInstances() -> forAll(ps : ProcessStep | not (ps.type.toString() = 'END'))/]" name="End" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subNodeMappings[name='EndStep']" iconPath="/process_modelling_design/icons/process_step/EndStep32x32.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::ProcessStep" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="END"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="End"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Regular" forceRefresh="true" elementsToSelect="aql: instance" containerMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']" iconPath="/process_modelling_design/icons/process_step/RegularStep32x32a.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:Switch">
                  <default>
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::ProcessStep" referenceName="elements">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="REGULAR"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="notation" valueExpression="OPERATION"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::ContractualObligation" referenceName="contractualObligation">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="Contract Params"/>
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Parameter" referenceName="parameters">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="key" valueExpression="Pieces"/>
                            </subModelOperations>
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Parameter" referenceName="parameters">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="key" valueExpression="Deadline"/>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </default>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="Delete Relationships when Deleting Elements" forceRefresh="true">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Switch">
                <cases conditionExpression="aql:element.inRelationships -> union(element.outRelationships) -> size() > 0">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:element.inRelationships -> union(element.outRelationships)">
                    <subModelOperations xsi:type="tool_1:RemoveElement">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                        <subModelOperations xsi:type="tool_1:RemoveElement"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </cases>
                <cases conditionExpression="aql:element.inRelationships -> union(element.outRelationships) -> size() = 0">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                    <subModelOperations xsi:type="tool_1:RemoveElement"/>
                  </subModelOperations>
                </cases>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Gates">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Decision" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subNodeMappings[name='DecisionGate']" iconPath="/process_modelling_design/icons/gates/DecisionGate32x32.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Gate" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="DECISION"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="false"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="Decision"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Parallelism" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subNodeMappings[name='ParallelismGate']" iconPath="/process_modelling_design/icons/gates/ParallelismGate32x32.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Gate" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="PARALLELISM"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isErrorGroup" valueExpression="false"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="Parallelism"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Relations">
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Flow" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@edgeMappings[name='FlowRelataionship']" iconPath="/process_modelling_design/icons/relationships/RelationFlow32x32.png">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.eContainer().eContainer().eContainer()">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Relationship" referenceName="relationships">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="FLOW"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="source" valueExpression="[source/]"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="target" valueExpression="[target/]"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="[source.id + '_' + target.id + '_flow'/]"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="outRelationships" valueExpression="[Relationship.allInstances() -> select(rel : Relationship | rel.id = (source.id + '-' + target.id + '-flow'))/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:target">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="inRelationships" valueExpression="[Relationship.allInstances() -> select(rel : Relationship | rel.id = (source.id + '-' + target.id + '-flow'))/]"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="OrganizationsAndVirtualOrganizations" label="Organizations and Virtual Organizations">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="VirtualOrganization" label="Virtual Organization" forceRefresh="true" containerMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::VirtualOrganization" referenceName="elements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Organization" forceRefresh="true" containerMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Organization" referenceName="organizations">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:generateRandomNumber()"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="role" valueExpression="ADDITIONAL_PARTNER"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Contractual Obligations">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Parameter" label="Contract Parameter" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='ContractualObligation']/@subNodeMappings[name='Parameter']" iconPath="/process_modelling_design/icons/process_step/products_and_capability/ContractualObligationParameter55x32.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="process_modeling::Parameter" referenceName="parameters"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.status.toString()='ACTIVE'">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']/@conditionnalStyles.0/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']/@conditionnalStyles.2/@style" referenceName="backgroundColor" value="//@userColorsPalettes[name='myColor']/@entries[name='PS_Active_Light_Blue']"/>
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']/@conditionnalStyles.0/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']/@conditionnalStyles.2/@style" referenceName="foregroundColor" value="//@userColorsPalettes[name='myColor']/@entries[name='PS_Active_Light_Blue']"/>
            <featureCustomizations xsi:type="description:EReferenceCustomization" referenceName="color" value="//@userColorsPalettes[name='myColor']/@entries[name='PS_Active_Light_Blue']"/>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.status.toString()='ERROR'">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']/@conditionnalStyles.0/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']/@conditionnalStyles.2/@style" referenceName="backgroundColor" value="//@userColorsPalettes[name='myColor']/@entries[name='PS_Error_Light_Red']"/>
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']/@conditionnalStyles.0/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']/@conditionnalStyles.2/@style" referenceName="foregroundColor" value="//@userColorsPalettes[name='myColor']/@entries[name='PS_Error_Light_Red']"/>
            <featureCustomizations xsi:type="description:EReferenceCustomization" referenceName="color" value="//@userColorsPalettes[name='myColor']/@entries[name='PS_Error_Light_Red']"/>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.status.toString()='NONE'">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']/@conditionnalStyles.0/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']/@conditionnalStyles.2/@style" referenceName="backgroundColor">
              <value href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </featureCustomizations>
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']/@conditionnalStyles.3/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']/@conditionnalStyles.4/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']/@conditionnalStyles.1/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']/@conditionnalStyles.5/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']/@conditionnalStyles.0/@style //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='CBP']/@defaultLayer/@containerMappings[name='VirtualOrganization']/@subContainerMappings[name='Organization']/@subContainerMappings[name='RegularStep']/@conditionnalStyles.2/@style" referenceName="foregroundColor">
              <value href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </featureCustomizations>
            <featureCustomizations xsi:type="description:EReferenceCustomization" referenceName="color">
              <value href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </featureCustomizations>
          </vsmElementCustomizations>
        </customization>
      </defaultLayer>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="process_modelling_design.Services"/>
  </ownedViewpoints>
  <userColorsPalettes name="myColor">
    <entries xsi:type="description:UserFixedColor" red="214" green="235" blue="245" name="Product_Light_Blue"/>
    <entries xsi:type="description:UserFixedColor" red="163" green="210" blue="233" name="Product_Blue"/>
    <entries xsi:type="description:UserFixedColor" red="255" green="220" blue="220" name="Error_Light_Red"/>
    <entries xsi:type="description:UserFixedColor" name="Unordered_Light_Gray"/>
    <entries xsi:type="description:UserFixedColor" red="255" green="205" blue="200" name="PS_Error_Light_Red"/>
    <entries xsi:type="description:UserFixedColor" red="218" green="238" blue="255" name="PS_Active_Light_Blue"/>
    <entries xsi:type="description:UserFixedColor" red="255" green="255" blue="225" name="Unordered_Processes_Light_Yellow"/>
    <entries xsi:type="description:UserFixedColor" red="230" green="230" blue="230" name="Sub_Process_Light_Gray"/>
    <entries xsi:type="description:UserFixedColor" red="255" green="225" blue="220" name="Active_Error_Light_Red"/>
  </userColorsPalettes>
  <extensions xsi:type="properties:ViewExtensionDescription">
    <categories name="VO">
      <pages name="VO_page" domainClass="process_modeling::VirtualOrganization" groups="//@extensions.0/@categories.0/@groups.0"/>
      <groups name="VO_group" labelExpression="Properties" domainClass="process_modeling::VirtualOrganization" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:DynamicMappingForDescription" name="sirius_default_rules_structural_features_for" iterator="eStructuralFeature" iterableExpression="aql:input.emfEditServices(self).getEStructuralFeatures()">
          <ifs name="sirius_default_rules_mono_string_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and not input.emfEditServices(self).isMultiline(eStructuralFeature) and (eStructuralFeature.name &lt;> 'alias')">
            <widget xsi:type="properties:TextDescription" name="sirius_default_rules_mono_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_multi_string_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and input.emfEditServices(self).isMultiline(eStructuralFeature)">
            <widget xsi:type="properties:TextAreaDescription" name="sirius_default_rules_multi_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" lineCount="2" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_mono_boolean" predicateExpression="aql:input.emfEditServices(self).needsCheckboxWidget(eStructuralFeature) and (eStructuralFeature.name &lt;> 'exposeToCollaboratingParties') and (eStructuralFeature.name &lt;> 'isTraced') and (eStructuralFeature.name &lt;> 'logStartTime') and (eStructuralFeature.name &lt;> 'logEndTime') and (eStructuralFeature.name &lt;> 'isErrorGroup')">
            <widget xsi:type="properties:CheckboxDescription" name="sirius_default_rules_mono_boolean" labelExpression="aql:eStructuralFeature.name" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_enum_if" predicateExpression="aql:eStructuralFeature.eType.oclIsKindOf(ecore::EEnum) and not(eStructuralFeature.many) and (eStructuralFeature.name &lt;> 'status')">
            <widget xsi:type="properties:RadioDescription" name="sirius_default_rules_enum" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:eStructuralFeature.eType.oclAsType(ecore::EEnum).getEEnumLiteralByLiteral(self.eGet(eStructuralFeature.name).toString())" candidatesExpression="aql:eStructuralFeature.eType.oclAsType(ecore::EEnum).eLiterals" candidateDisplayExpression="aql:candidate.name" numberOfColumns="5">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue.instance)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_eattribute_many_if" predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EAttribute) and eStructuralFeature.many">
            <widget xsi:type="properties:ListDescription" name="sirius_default_rules_eattribute_many" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)" displayExpression="var:value"/>
          </ifs>
          <ifs name="sirius_default_rules_ereference_if" predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EReference) and (eStructuralFeature.name &lt;> 'inRelationships') and (eStructuralFeature.name &lt;> 'outRelationships')">
            <widget xsi:type="properties-ext-widgets-reference:ExtReferenceDescription" name="sirius_default_rules_ereference" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" referenceNameExpression="aql:eStructuralFeature.name"/>
          </ifs>
        </controls>
      </groups>
    </categories>
    <categories name="Process">
      <pages name="Process_page" domainClass="process_modeling::Process" groups="//@extensions.0/@categories.1/@groups.0"/>
      <groups name="Process_group" labelExpression="Properties" domainClass="process_modeling::Process" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:DynamicMappingForDescription" name="sirius_default_rules_structural_features_for" iterator="eStructuralFeature" iterableExpression="aql:input.emfEditServices(self).getEStructuralFeatures()">
          <ifs name="sirius_default_rules_mono_string_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and not input.emfEditServices(self).isMultiline(eStructuralFeature) and (eStructuralFeature.name &lt;> 'alias')">
            <widget xsi:type="properties:TextDescription" name="sirius_default_rules_mono_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_multi_string_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and input.emfEditServices(self).isMultiline(eStructuralFeature)">
            <widget xsi:type="properties:TextAreaDescription" name="sirius_default_rules_multi_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" lineCount="2" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_mono_boolean" predicateExpression="aql:input.emfEditServices(self).needsCheckboxWidget(eStructuralFeature) and (eStructuralFeature.name &lt;> 'exposeToCollaboratingParties') and (eStructuralFeature.name &lt;> 'isTraced') and (eStructuralFeature.name &lt;> 'logStartTime') and (eStructuralFeature.name &lt;> 'logEndTime') and (eStructuralFeature.name &lt;> 'isErrorGroup')">
            <widget xsi:type="properties:CheckboxDescription" name="sirius_default_rules_mono_boolean" labelExpression="aql:eStructuralFeature.name" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_enum_if" predicateExpression="aql:eStructuralFeature.eType.oclIsKindOf(ecore::EEnum) and not(eStructuralFeature.many) and (eStructuralFeature.name &lt;> 'status')">
            <widget xsi:type="properties:RadioDescription" name="sirius_default_rules_enum" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:eStructuralFeature.eType.oclAsType(ecore::EEnum).getEEnumLiteralByLiteral(self.eGet(eStructuralFeature.name).toString())" candidatesExpression="aql:eStructuralFeature.eType.oclAsType(ecore::EEnum).eLiterals" candidateDisplayExpression="aql:candidate.name" numberOfColumns="5">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue.instance)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_eattribute_many_if" predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EAttribute) and eStructuralFeature.many">
            <widget xsi:type="properties:ListDescription" name="sirius_default_rules_eattribute_many" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)" displayExpression="var:value"/>
          </ifs>
          <ifs name="sirius_default_rules_ereference_if" predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EReference) and (eStructuralFeature.name &lt;> 'inRelationships') and (eStructuralFeature.name &lt;> 'outRelationships')">
            <widget xsi:type="properties-ext-widgets-reference:ExtReferenceDescription" name="sirius_default_rules_ereference" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" referenceNameExpression="aql:eStructuralFeature.name"/>
          </ifs>
        </controls>
      </groups>
    </categories>
    <categories name="Organization">
      <pages name="Organization_page" domainClass="process_modeling::Organization" groups="//@extensions.0/@categories.2/@groups.0"/>
      <groups name="Organization_group" labelExpression="Properties" domainClass="process_modeling::Organization" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:DynamicMappingForDescription" name="sirius_default_rules_structural_features_for" iterator="eStructuralFeature" iterableExpression="aql:input.emfEditServices(self).getEStructuralFeatures()">
          <ifs name="sirius_default_rules_mono_string_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and not input.emfEditServices(self).isMultiline(eStructuralFeature) and (eStructuralFeature.name &lt;> 'alias')">
            <widget xsi:type="properties:TextDescription" name="sirius_default_rules_mono_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_multi_string_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and input.emfEditServices(self).isMultiline(eStructuralFeature)">
            <widget xsi:type="properties:TextAreaDescription" name="sirius_default_rules_multi_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" lineCount="2" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_mono_boolean" predicateExpression="aql:input.emfEditServices(self).needsCheckboxWidget(eStructuralFeature) and (eStructuralFeature.name &lt;> 'exposeToCollaboratingParties') and (eStructuralFeature.name &lt;> 'isTraced') and (eStructuralFeature.name &lt;> 'logStartTime') and (eStructuralFeature.name &lt;> 'logEndTime') and (eStructuralFeature.name &lt;> 'isErrorGroup')">
            <widget xsi:type="properties:CheckboxDescription" name="sirius_default_rules_mono_boolean" labelExpression="aql:eStructuralFeature.name" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_enum_if" predicateExpression="aql:eStructuralFeature.eType.oclIsKindOf(ecore::EEnum) and not(eStructuralFeature.many) and (eStructuralFeature.name &lt;> 'status')">
            <widget xsi:type="properties:RadioDescription" name="sirius_default_rules_enum" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:eStructuralFeature.eType.oclAsType(ecore::EEnum).getEEnumLiteralByLiteral(self.eGet(eStructuralFeature.name).toString())" candidatesExpression="aql:eStructuralFeature.eType.oclAsType(ecore::EEnum).eLiterals" candidateDisplayExpression="aql:candidate.name" numberOfColumns="5">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue.instance)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_eattribute_many_if" predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EAttribute) and eStructuralFeature.many">
            <widget xsi:type="properties:ListDescription" name="sirius_default_rules_eattribute_many" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)" displayExpression="var:value"/>
          </ifs>
          <ifs name="sirius_default_rules_ereference_if" predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EReference) and (eStructuralFeature.name &lt;> 'inRelationships') and (eStructuralFeature.name &lt;> 'outRelationships')">
            <widget xsi:type="properties-ext-widgets-reference:ExtReferenceDescription" name="sirius_default_rules_ereference" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" referenceNameExpression="aql:eStructuralFeature.name"/>
          </ifs>
        </controls>
      </groups>
    </categories>
    <categories name="ProcessStep">
      <pages name="ProcessStep_page" domainClass="process_modeling::ProcessStep" groups="//@extensions.0/@categories.3/@groups.0"/>
      <groups name="ProcessStep_group" labelExpression="Properties" domainClass="process_modeling::ProcessStep" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:DynamicMappingForDescription" name="sirius_default_rules_structural_features_for" iterator="eStructuralFeature" iterableExpression="aql:input.emfEditServices(self).getEStructuralFeatures()">
          <ifs name="sirius_default_rules_mono_string_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and not input.emfEditServices(self).isMultiline(eStructuralFeature)">
            <widget xsi:type="properties:TextDescription" name="sirius_default_rules_mono_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_multi_string_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and input.emfEditServices(self).isMultiline(eStructuralFeature)">
            <widget xsi:type="properties:TextAreaDescription" name="sirius_default_rules_multi_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" lineCount="2" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_mono_boolean" predicateExpression="aql:input.emfEditServices(self).needsCheckboxWidget(eStructuralFeature) and not ((self.eContainer().eClass()=process_modeling::Organization) and ((eStructuralFeature.name = 'exposeToCollaboratingParties') or (eStructuralFeature.name = 'isErrorGroup'))">
            <widget xsi:type="properties:CheckboxDescription" name="sirius_default_rules_mono_boolean" labelExpression="aql:eStructuralFeature.name" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_enum_if" predicateExpression="aql:eStructuralFeature.eType.oclIsKindOf(ecore::EEnum) and not(eStructuralFeature.many) and (eStructuralFeature.name &lt;> 'status')">
            <widget xsi:type="properties:RadioDescription" name="sirius_default_rules_enum" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:eStructuralFeature.eType.oclAsType(ecore::EEnum).getEEnumLiteralByLiteral(self.eGet(eStructuralFeature.name).toString())" candidatesExpression="aql:eStructuralFeature.eType.oclAsType(ecore::EEnum).eLiterals" candidateDisplayExpression="aql:candidate.name" numberOfColumns="5">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue.instance)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue.instance)"/>
                </firstModelOperations>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_eattribute_many_if" predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EAttribute) and eStructuralFeature.many">
            <widget xsi:type="properties:ListDescription" name="sirius_default_rules_eattribute_many" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)" displayExpression="var:value"/>
          </ifs>
          <ifs name="sirius_default_rules_ereference_if" predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EReference) and (eStructuralFeature.name &lt;> 'inRelationships') and (eStructuralFeature.name &lt;> 'outRelationships')">
            <widget xsi:type="properties-ext-widgets-reference:ExtReferenceDescription" name="sirius_default_rules_ereference" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" referenceNameExpression="aql:eStructuralFeature.name"/>
          </ifs>
        </controls>
      </groups>
    </categories>
    <categories name="ContractualObligation">
      <pages name="ContractualObligation_page" domainClass="process_modeling::ContractualObligation" groups="//@extensions.0/@categories.4/@groups.0"/>
      <groups name="ContractualObligation_group" labelExpression="Properties" domainClass="process_modeling::ContractualObligation" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:DynamicMappingForDescription" name="sirius_default_rules_structural_features_for" iterator="eStructuralFeature" iterableExpression="aql:input.emfEditServices(self).getEStructuralFeatures()">
          <ifs name="sirius_default_rules_mono_string_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and not input.emfEditServices(self).isMultiline(eStructuralFeature) and (eStructuralFeature.name &lt;> 'alias')">
            <widget xsi:type="properties:TextDescription" name="sirius_default_rules_mono_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_multi_string_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and input.emfEditServices(self).isMultiline(eStructuralFeature)">
            <widget xsi:type="properties:TextAreaDescription" name="sirius_default_rules_multi_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" lineCount="2" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_mono_boolean" predicateExpression="aql:input.emfEditServices(self).needsCheckboxWidget(eStructuralFeature) and and (eStructuralFeature.name &lt;> 'exposeToCollaboratingParties') and (eStructuralFeature.name &lt;> 'isTraced')">
            <widget xsi:type="properties:CheckboxDescription" name="sirius_default_rules_mono_boolean" labelExpression="aql:eStructuralFeature.name" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_enum_if" predicateExpression="aql:eStructuralFeature.eType.oclIsKindOf(ecore::EEnum) and not(eStructuralFeature.many) and (eStructuralFeature.name &lt;> 'status') and (eStructuralFeature.name &lt;> 'persistenceType')">
            <widget xsi:type="properties:RadioDescription" name="sirius_default_rules_enum" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:eStructuralFeature.eType.oclAsType(ecore::EEnum).getEEnumLiteralByLiteral(self.eGet(eStructuralFeature.name).toString())" candidatesExpression="aql:eStructuralFeature.eType.oclAsType(ecore::EEnum).eLiterals" candidateDisplayExpression="aql:candidate.name" numberOfColumns="5">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue.instance)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue.instance)"/>
                </firstModelOperations>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_eattribute_many_if" predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EAttribute) and eStructuralFeature.many">
            <widget xsi:type="properties:ListDescription" name="sirius_default_rules_eattribute_many" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)" displayExpression="var:value"/>
          </ifs>
          <ifs name="sirius_default_rules_ereference_if" predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EReference) and (eStructuralFeature.name &lt;> 'inRelationships') and (eStructuralFeature.name &lt;> 'outRelationships')">
            <widget xsi:type="properties-ext-widgets-reference:ExtReferenceDescription" name="sirius_default_rules_ereference" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" referenceNameExpression="aql:eStructuralFeature.name"/>
          </ifs>
        </controls>
      </groups>
    </categories>
    <categories name="Parameter">
      <pages name="Parameter_page" domainClass="process_modeling::Parameter" groups="//@extensions.0/@categories.5/@groups.0"/>
      <groups name="Parameter_group" labelExpression="Properties" domainClass="process_modeling::Parameter" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:DynamicMappingForDescription" name="sirius_default_rules_structural_features_for" iterator="eStructuralFeature" iterableExpression="aql:input.emfEditServices(self).getEStructuralFeatures()">
          <ifs name="sirius_default_rules_mono_string_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and not input.emfEditServices(self).isMultiline(eStructuralFeature) and not ((eStructuralFeature.name = 'name') or (eStructuralFeature.name = 'id')) and not ((self.eContainer().eClass()=process_modeling::ContractualObligation) and ((eStructuralFeature.name = 'alias'))">
            <widget xsi:type="properties:TextDescription" name="sirius_default_rules_mono_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_multi_string_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and input.emfEditServices(self).isMultiline(eStructuralFeature)">
            <widget xsi:type="properties:TextAreaDescription" name="sirius_default_rules_multi_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" lineCount="2" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_mono_boolean" predicateExpression="aql:input.emfEditServices(self).needsCheckboxWidget(eStructuralFeature) and not ((self.eContainer().eClass()=process_modeling::ContractualObligation) and ((eStructuralFeature.name = 'exposeToCollaboratingParties') or (eStructuralFeature.name = 'isErrorGroup') or (eStructuralFeature.name = 'isPersisted'))">
            <widget xsi:type="properties:CheckboxDescription" name="sirius_default_rules_mono_boolean" labelExpression="aql:eStructuralFeature.name" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_enum_if" predicateExpression="aql:eStructuralFeature.eType.oclIsKindOf(ecore::EEnum) and not(eStructuralFeature.many) and (eStructuralFeature.name &lt;> 'status') and not ((self.eContainer().eClass()=process_modeling::ContractualObligation) and ((eStructuralFeature.name = 'persistenceType'))">
            <widget xsi:type="properties:RadioDescription" name="sirius_default_rules_enum" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:eStructuralFeature.eType.oclAsType(ecore::EEnum).getEEnumLiteralByLiteral(self.eGet(eStructuralFeature.name).toString())" candidatesExpression="aql:eStructuralFeature.eType.oclAsType(ecore::EEnum).eLiterals" candidateDisplayExpression="aql:candidate.name" numberOfColumns="5">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue.instance)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue.instance)"/>
                </firstModelOperations>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_eattribute_many_if" predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EAttribute) and eStructuralFeature.many">
            <widget xsi:type="properties:ListDescription" name="sirius_default_rules_eattribute_many" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)" displayExpression="var:value"/>
          </ifs>
          <ifs name="sirius_default_rules_ereference_if" predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EReference) and (eStructuralFeature.name &lt;> 'inRelationships') and (eStructuralFeature.name &lt;> 'outRelationships')">
            <widget xsi:type="properties-ext-widgets-reference:ExtReferenceDescription" name="sirius_default_rules_ereference" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" referenceNameExpression="aql:eStructuralFeature.name"/>
          </ifs>
        </controls>
      </groups>
    </categories>
    <categories name="Capability">
      <pages name="Capability_page" domainClass="process_modeling::Capability" groups="//@extensions.0/@categories.6/@groups.0"/>
      <groups name="Capability_group" labelExpression="Properties" domainClass="process_modeling::Capability" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:DynamicMappingForDescription" name="sirius_default_rules_structural_features_for" iterator="eStructuralFeature" iterableExpression="aql:input.emfEditServices(self).getEStructuralFeatures()">
          <ifs name="sirius_default_rules_mono_string_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and not input.emfEditServices(self).isMultiline(eStructuralFeature)">
            <widget xsi:type="properties:TextDescription" name="sirius_default_rules_mono_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_multi_string_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and input.emfEditServices(self).isMultiline(eStructuralFeature)">
            <widget xsi:type="properties:TextAreaDescription" name="sirius_default_rules_multi_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" lineCount="2" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_mono_boolean" predicateExpression="aql:input.emfEditServices(self).needsCheckboxWidget(eStructuralFeature) and (eStructuralFeature.name &lt;> 'isPersisted') and (eStructuralFeature.name &lt;> 'requiresStorage')">
            <widget xsi:type="properties:CheckboxDescription" name="sirius_default_rules_mono_boolean" labelExpression="aql:eStructuralFeature.name" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_enum_if" predicateExpression="aql:eStructuralFeature.eType.oclIsKindOf(ecore::EEnum) and not(eStructuralFeature.many) and (eStructuralFeature.name &lt;> 'persistenceType')">
            <widget xsi:type="properties:RadioDescription" name="sirius_default_rules_enum" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:eStructuralFeature.eType.oclAsType(ecore::EEnum).getEEnumLiteralByLiteral(self.eGet(eStructuralFeature.name).toString())" candidatesExpression="aql:eStructuralFeature.eType.oclAsType(ecore::EEnum).eLiterals" candidateDisplayExpression="aql:candidate.name" numberOfColumns="5">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue.instance)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue.instance)"/>
                </firstModelOperations>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_eattribute_many_if" predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EAttribute) and eStructuralFeature.many">
            <widget xsi:type="properties:ListDescription" name="sirius_default_rules_eattribute_many" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)" displayExpression="var:value"/>
          </ifs>
          <ifs name="sirius_default_rules_ereference_if" predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EReference) and (eStructuralFeature.name &lt;> 'inRelationships') and (eStructuralFeature.name &lt;> 'outRelationships')">
            <widget xsi:type="properties-ext-widgets-reference:ExtReferenceDescription" name="sirius_default_rules_ereference" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" referenceNameExpression="aql:eStructuralFeature.name"/>
          </ifs>
        </controls>
      </groups>
    </categories>
    <categories name="Gate">
      <pages name="Gate_page" domainClass="process_modeling::Gate" groups="//@extensions.0/@categories.7/@groups.0"/>
      <groups name="Gate_group" labelExpression="Properties" domainClass="process_modeling::Gate" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:DynamicMappingForDescription" name="sirius_default_rules_structural_features_for" iterator="eStructuralFeature" iterableExpression="aql:input.emfEditServices(self).getEStructuralFeatures()">
          <ifs name="sirius_default_rules_mono_string_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and not input.emfEditServices(self).isMultiline(eStructuralFeature)">
            <widget xsi:type="properties:TextDescription" name="sirius_default_rules_mono_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_multi_string_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and input.emfEditServices(self).isMultiline(eStructuralFeature)">
            <widget xsi:type="properties:TextAreaDescription" name="sirius_default_rules_multi_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" lineCount="2" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_mono_boolean" predicateExpression="aql:input.emfEditServices(self).needsCheckboxWidget(eStructuralFeature) and (eStructuralFeature.name &lt;> 'isPersisted') and (eStructuralFeature.name &lt;> 'requiresStorage') and (eStructuralFeature.name &lt;> 'isTraced') and (eStructuralFeature.name &lt;> 'logStartTime') and (eStructuralFeature.name &lt;> 'logEndTime') and (eStructuralFeature.name &lt;> 'exposeToCollaboratingParties') and (eStructuralFeature.name &lt;> 'isErrorGroup')">
            <widget xsi:type="properties:CheckboxDescription" name="sirius_default_rules_mono_boolean" labelExpression="aql:eStructuralFeature.name" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_enum_if" predicateExpression="aql:eStructuralFeature.eType.oclIsKindOf(ecore::EEnum) and not(eStructuralFeature.many) and (eStructuralFeature.name &lt;> 'persistenceType') and (eStructuralFeature.name &lt;> 'status')">
            <widget xsi:type="properties:RadioDescription" name="sirius_default_rules_enum" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:eStructuralFeature.eType.oclAsType(ecore::EEnum).getEEnumLiteralByLiteral(self.eGet(eStructuralFeature.name).toString())" candidatesExpression="aql:eStructuralFeature.eType.oclAsType(ecore::EEnum).eLiterals" candidateDisplayExpression="aql:candidate.name" numberOfColumns="5">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue.instance)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue.instance)"/>
                </firstModelOperations>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_eattribute_many_if" predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EAttribute) and eStructuralFeature.many">
            <widget xsi:type="properties:ListDescription" name="sirius_default_rules_eattribute_many" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)" displayExpression="var:value"/>
          </ifs>
          <ifs name="sirius_default_rules_ereference_if" predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EReference) and (eStructuralFeature.name &lt;> 'inRelationships') and (eStructuralFeature.name &lt;> 'outRelationships')">
            <widget xsi:type="properties-ext-widgets-reference:ExtReferenceDescription" name="sirius_default_rules_ereference" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" referenceNameExpression="aql:eStructuralFeature.name"/>
          </ifs>
        </controls>
      </groups>
    </categories>
    <categories name="Product">
      <pages name="Product_page" domainClass="process_modeling::Product" groups="//@extensions.0/@categories.8/@groups.0"/>
      <groups name="Product_group" labelExpression="Properties" domainClass="process_modeling::Product" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:DynamicMappingForDescription" name="sirius_default_rules_structural_features_for" iterator="eStructuralFeature" iterableExpression="aql:input.emfEditServices(self).getEStructuralFeatures()">
          <ifs name="sirius_default_rules_mono_string_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and not input.emfEditServices(self).isMultiline(eStructuralFeature)">
            <widget xsi:type="properties:TextDescription" name="sirius_default_rules_mono_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_multi_string_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and input.emfEditServices(self).isMultiline(eStructuralFeature)">
            <widget xsi:type="properties:TextAreaDescription" name="sirius_default_rules_multi_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" lineCount="2" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_mono_boolean" predicateExpression="aql:input.emfEditServices(self).needsCheckboxWidget(eStructuralFeature) and (eStructuralFeature.name &lt;> 'isPersisted') and (eStructuralFeature.name &lt;> 'requiresStorage')">
            <widget xsi:type="properties:CheckboxDescription" name="sirius_default_rules_mono_boolean" labelExpression="aql:eStructuralFeature.name" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_enum_if" predicateExpression="aql:eStructuralFeature.eType.oclIsKindOf(ecore::EEnum) and not(eStructuralFeature.many) and (eStructuralFeature.name &lt;> 'persistenceType')">
            <widget xsi:type="properties:RadioDescription" name="sirius_default_rules_enum" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:eStructuralFeature.eType.oclAsType(ecore::EEnum).getEEnumLiteralByLiteral(self.eGet(eStructuralFeature.name).toString())" candidatesExpression="aql:eStructuralFeature.eType.oclAsType(ecore::EEnum).eLiterals" candidateDisplayExpression="aql:candidate.name" numberOfColumns="5">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue.instance)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue.instance)"/>
                </firstModelOperations>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_eattribute_many_if" predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EAttribute) and eStructuralFeature.many">
            <widget xsi:type="properties:ListDescription" name="sirius_default_rules_eattribute_many" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)" displayExpression="var:value"/>
          </ifs>
          <ifs name="sirius_default_rules_ereference_if" predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EReference) and (eStructuralFeature.name &lt;> 'inRelationships') and (eStructuralFeature.name &lt;> 'outRelationships')">
            <widget xsi:type="properties-ext-widgets-reference:ExtReferenceDescription" name="sirius_default_rules_ereference" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" referenceNameExpression="aql:eStructuralFeature.name"/>
          </ifs>
        </controls>
      </groups>
    </categories>
    <categories name="Relationship">
      <pages name="Relationship_page" domainClass="process_modeling::Relationship" groups="//@extensions.0/@categories.9/@groups.0"/>
      <groups name="Relationship_group" labelExpression="Properties" domainClass="process_modeling::Relationship" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:DynamicMappingForDescription" name="sirius_default_rules_structural_features_for" iterator="eStructuralFeature" iterableExpression="aql:input.emfEditServices(self).getEStructuralFeatures()">
          <ifs name="sirius_default_rules_mono_string_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and not input.emfEditServices(self).isMultiline(eStructuralFeature)">
            <widget xsi:type="properties:TextDescription" name="sirius_default_rules_mono_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_multi_string_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and input.emfEditServices(self).isMultiline(eStructuralFeature)">
            <widget xsi:type="properties:TextAreaDescription" name="sirius_default_rules_multi_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" lineCount="2" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_mono_boolean" predicateExpression="aql:input.emfEditServices(self).needsCheckboxWidget(eStructuralFeature)">
            <widget xsi:type="properties:CheckboxDescription" name="sirius_default_rules_mono_boolean" labelExpression="aql:eStructuralFeature.name" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_enum_if" predicateExpression="aql:eStructuralFeature.eType.oclIsKindOf(ecore::EEnum) and not(eStructuralFeature.many)">
            <widget xsi:type="properties:RadioDescription" name="sirius_default_rules_enum" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:eStructuralFeature.eType.oclAsType(ecore::EEnum).getEEnumLiteralByLiteral(self.eGet(eStructuralFeature.name).toString())" candidatesExpression="aql:eStructuralFeature.eType.oclAsType(ecore::EEnum).eLiterals" candidateDisplayExpression="aql:candidate.name" numberOfColumns="5">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue.instance)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue.instance)"/>
                </firstModelOperations>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_eattribute_many_if" predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EAttribute) and eStructuralFeature.many">
            <widget xsi:type="properties:ListDescription" name="sirius_default_rules_eattribute_many" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)" displayExpression="var:value"/>
          </ifs>
          <ifs name="sirius_default_rules_ereference_if" predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EReference)">
            <widget xsi:type="properties-ext-widgets-reference:ExtReferenceDescription" name="sirius_default_rules_ereference" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" referenceNameExpression="aql:eStructuralFeature.name"/>
          </ifs>
        </controls>
      </groups>
    </categories>
    <categories name="Constraint">
      <pages name="Constraint_page" domainClass="process_modeling::Constraint" groups="//@extensions.0/@categories.10/@groups.0"/>
      <groups name="Constraint_group" labelExpression="Properties" domainClass="process_modeling::Constraint" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:DynamicMappingForDescription" name="sirius_default_rules_structural_features_for" iterator="eStructuralFeature" iterableExpression="aql:input.emfEditServices(self).getEStructuralFeatures()">
          <ifs name="sirius_default_rules_mono_string_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and not input.emfEditServices(self).isMultiline(eStructuralFeature) and not ((eStructuralFeature.name = 'name') or (eStructuralFeature.name = 'id')) and not ((self.eContainer().eClass()=process_modeling::ContractualObligation) and ((eStructuralFeature.name = 'alias'))">
            <widget xsi:type="properties:TextDescription" name="sirius_default_rules_mono_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_multi_string_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and input.emfEditServices(self).isMultiline(eStructuralFeature)">
            <widget xsi:type="properties:TextAreaDescription" name="sirius_default_rules_multi_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" lineCount="2" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_mono_boolean" predicateExpression="aql:input.emfEditServices(self).needsCheckboxWidget(eStructuralFeature) and not ((self.eContainer().eClass()=process_modeling::ContractualObligation) and ((eStructuralFeature.name = 'exposeToCollaboratingParties') or (eStructuralFeature.name = 'isErrorGroup') or (eStructuralFeature.name = 'isPersisted'))">
            <widget xsi:type="properties:CheckboxDescription" name="sirius_default_rules_mono_boolean" labelExpression="aql:eStructuralFeature.name" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_enum_if" predicateExpression="aql:eStructuralFeature.eType.oclIsKindOf(ecore::EEnum) and not(eStructuralFeature.many) and (eStructuralFeature.name &lt;> 'status') and not ((self.eContainer().eClass()=process_modeling::ContractualObligation) and ((eStructuralFeature.name = 'persistenceType'))">
            <widget xsi:type="properties:RadioDescription" name="sirius_default_rules_enum" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:eStructuralFeature.eType.oclAsType(ecore::EEnum).getEEnumLiteralByLiteral(self.eGet(eStructuralFeature.name).toString())" candidatesExpression="aql:eStructuralFeature.eType.oclAsType(ecore::EEnum).eLiterals" candidateDisplayExpression="aql:candidate.name" numberOfColumns="5">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue.instance)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue.instance)"/>
                </firstModelOperations>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_eattribute_many_if" predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EAttribute) and eStructuralFeature.many">
            <widget xsi:type="properties:ListDescription" name="sirius_default_rules_eattribute_many" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)" displayExpression="var:value"/>
          </ifs>
          <ifs name="sirius_default_rules_ereference_if" predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EReference) and (eStructuralFeature.name &lt;> 'inRelationships') and (eStructuralFeature.name &lt;> 'outRelationships')">
            <widget xsi:type="properties-ext-widgets-reference:ExtReferenceDescription" name="sirius_default_rules_ereference" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" referenceNameExpression="aql:eStructuralFeature.name"/>
          </ifs>
        </controls>
      </groups>
    </categories>
  </extensions>
</description:Group>
