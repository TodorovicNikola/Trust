#!/bin/bash

echo "Enrolling the CA admin"

#input:
	# FABRIC_CA_CLIENT_HOME
	# PEM_FILE
	# PEER_HOME
	# organization:
		# name
		# peer:
			# name
			# password
		# user:
			# name
			# password
		# admin:
			# name
			# password
		# certificateAuthority:
			# name
			# adminName
			# adminPassword
			# host
			# port

export FABRIC_CA_CLIENT_HOME=${FABRIC_CA_CLIENT_HOME}
mkdir -p ${FABRIC_CA_CLIENT_HOME}

set -x
fabric-ca-client enroll -u https://${organization.certificateAuthority.adminName}:${organization.certificateAuthority.adminPassword}@${organization.certificateAuthority.host}:${organization.certificateAuthority.port} --caname ${organization.certificateAuthority.name} --tls.certfiles ${PEM_FILE}
{ set +x; } 2>/dev/null

echo "NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/${organization.certificateAuthority.host}-${organization.certificateAuthority.port}-${organization.certificateAuthority.name}.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/${organization.certificateAuthority.host}-${organization.certificateAuthority.port}-${organization.certificateAuthority.name}.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/${organization.certificateAuthority.host}-${organization.certificateAuthority.port}-${organization.certificateAuthority.name}.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/${organization.certificateAuthority.host}-${organization.certificateAuthority.port}-${organization.certificateAuthority.name}.pem
    OrganizationalUnitIdentifier: orderer" > "${FABRIC_CA_CLIENT_HOME}/msp/config.yaml"

mkdir -p "${FABRIC_CA_CLIENT_HOME}/msp/tlscacerts"
cp ${PEM_FILE} "${FABRIC_CA_CLIENT_HOME}/msp/tlscacerts/tlsca.${organization.name}-cert.pem"

mkdir -p "${FABRIC_CA_CLIENT_HOME}/tlsca"
cp ${PEM_FILE} "${FABRIC_CA_CLIENT_HOME}/tlsca/tlsca.${organization.name}-cert.pem"

echo "Registering orderer"
set -x
fabric-ca-client register --caname ${organization.certificateAuthority.name} --id.name ${organization.peer.name} --id.secret ${organization.peer.password} --id.type orderer --tls.certfiles ${PEM_FILE}
{ set +x; } 2>/dev/null

echo "Registering the orderer admin"
set -x
fabric-ca-client register --caname ${organization.certificateAuthority.name} --id.name ${organization.admin.name} --id.secret ${organization.admin.password} --id.type admin --tls.certfiles ${PEM_FILE}
{ set +x; } 2>/dev/null

echo "Generating the orderer msp"
set -x
fabric-ca-client enroll -u https://${organization.peer.name}:${organization.peer.password}@${organization.certificateAuthority.host}:${organization.certificateAuthority.port} --caname ${organization.certificateAuthority.name} -M "${PEER_HOME}/msp" --csr.hosts "${organization.peer.name}.${organization.name}" --csr.hosts localhost --tls.certfiles ${PEM_FILE}
{ set +x; } 2>/dev/null

cp "${FABRIC_CA_CLIENT_HOME}/msp/config.yaml" "${PEER_HOME}/msp/config.yaml"

echo "Generating the orderer-tls certificates"
set -x
fabric-ca-client enroll -u https://${organization.peer.name}:${organization.peer.password}@${organization.certificateAuthority.host}:${organization.certificateAuthority.port} --caname ${organization.certificateAuthority.name} -M "${PEER_HOME}/tls" --enrollment.profile tls --csr.hosts "${organization.peer.name}.${organization.name}" --csr.hosts ${organization.certificateAuthority.host} --tls.certfiles ${PEM_FILE}
{ set +x; } 2>/dev/null

# Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
cp "${PEER_HOME}/tls/tlscacerts/"* "${PEER_HOME}/tls/ca.crt"
cp "${PEER_HOME}/tls/signcerts/"* "${PEER_HOME}/tls/server.crt"
cp "${PEER_HOME}/tls/keystore/"* "${PEER_HOME}/tls/server.key"

mkdir -p "${PEER_HOME}/msp/tlscacerts"
cp "${PEER_HOME}/tls/tlscacerts/"* "${PEER_HOME}/msp/tlscacerts/tlsca.${organization.name}-cert.pem"

echo "Generating the admin msp"
set -x
fabric-ca-client enroll -u https://${organization.admin.name}:${organization.admin.password}@${organization.certificateAuthority.host}:${organization.certificateAuthority.port} --caname ${organization.certificateAuthority.name} -M "${FABRIC_CA_CLIENT_HOME}/users/${organization.admin.name}@${organization.name}/msp" --tls.certfiles ${PEM_FILE}
{ set +x; } 2>/dev/null

cp "${FABRIC_CA_CLIENT_HOME}/msp/config.yaml" "${FABRIC_CA_CLIENT_HOME}/users/${organization.admin.name}@${organization.name}/msp/config.yaml"
